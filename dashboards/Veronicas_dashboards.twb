<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20243.24.1010.1014                               -->
<workbook original-version='18.1' source-build='2024.3.0 (20243.24.1010.1014)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='veronicas_cleaned_df' inline='true' name='federated.1b0nxao0z3w9sk1epa4qr1bhw27c' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='veronicas_cleaned_df' name='textscan.02m8wid0gnubxk15kdlpz1cw6id0'>
            <connection class='textscan' directory='/Users/jonathantsui/Desktop/Ironhack/labs/final_project/data/clean' filename='veronicas_cleaned_df.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.02m8wid0gnubxk15kdlpz1cw6id0' name='veronicas_cleaned_df.csv' table='[veronicas_cleaned_df#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='date' name='date' ordinal='0' />
            <column datatype='string' name='day' ordinal='1' />
            <column datatype='real' name='gross_sales' ordinal='2' />
            <column datatype='real' name='returns' ordinal='3' />
            <column datatype='real' name='discounts_comps' ordinal='4' />
            <column datatype='real' name='net_sales' ordinal='5' />
            <column datatype='real' name='gift_card_sales' ordinal='6' />
            <column datatype='real' name='tax' ordinal='7' />
            <column datatype='real' name='tip' ordinal='8' />
            <column datatype='real' name='refunds_by_amount' ordinal='9' />
            <column datatype='real' name='cash' ordinal='10' />
            <column datatype='real' name='card' ordinal='11' />
            <column datatype='real' name='gift_card' ordinal='12' />
            <column datatype='real' name='fees' ordinal='13' />
            <column datatype='integer' name='is_store_open' ordinal='14' />
            <column datatype='real' name='mean_temp_c' ordinal='15' />
            <column datatype='real' name='total_rain_mm' ordinal='16' />
            <column datatype='real' name='total_precip_mm' ordinal='17' />
            <column datatype='real' name='total_snow_mm' ordinal='18' />
            <column datatype='string' name='holiday_name' ordinal='19' />
            <column datatype='integer' name='is_holiday' ordinal='20' />
            <column datatype='integer' name='is_holiday_prev_1' ordinal='21' />
            <column datatype='integer' name='is_holiday_next_1' ordinal='22' />
            <column datatype='integer' name='is_holiday_prev_2' ordinal='23' />
            <column datatype='integer' name='is_holiday_next_2' ordinal='24' />
            <column datatype='string' name='temp_category' ordinal='25' />
            <column datatype='string' name='season' ordinal='26' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[veronicas_cleaned_df.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_CA&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[veronicas_cleaned_df.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <object-id>[veronicas_cleaned_df.csv_65990D1FD53D43D6AA46D194364B05E0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>day</remote-name>
            <remote-type>129</remote-type>
            <local-name>[day]</local-name>
            <parent-name>[veronicas_cleaned_df.csv]</parent-name>
            <remote-alias>day</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[veronicas_cleaned_df.csv_65990D1FD53D43D6AA46D194364B05E0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gross_sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gross_sales]</local-name>
            <parent-name>[veronicas_cleaned_df.csv]</parent-name>
            <remote-alias>gross_sales</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[veronicas_cleaned_df.csv_65990D1FD53D43D6AA46D194364B05E0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>returns</remote-name>
            <remote-type>5</remote-type>
            <local-name>[returns]</local-name>
            <parent-name>[veronicas_cleaned_df.csv]</parent-name>
            <remote-alias>returns</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[veronicas_cleaned_df.csv_65990D1FD53D43D6AA46D194364B05E0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>discounts_comps</remote-name>
            <remote-type>5</remote-type>
            <local-name>[discounts_comps]</local-name>
            <parent-name>[veronicas_cleaned_df.csv]</parent-name>
            <remote-alias>discounts_comps</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[veronicas_cleaned_df.csv_65990D1FD53D43D6AA46D194364B05E0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>net_sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[net_sales]</local-name>
            <parent-name>[veronicas_cleaned_df.csv]</parent-name>
            <remote-alias>net_sales</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[veronicas_cleaned_df.csv_65990D1FD53D43D6AA46D194364B05E0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gift_card_sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gift_card_sales]</local-name>
            <parent-name>[veronicas_cleaned_df.csv]</parent-name>
            <remote-alias>gift_card_sales</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[veronicas_cleaned_df.csv_65990D1FD53D43D6AA46D194364B05E0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tax</remote-name>
            <remote-type>5</remote-type>
            <local-name>[tax]</local-name>
            <parent-name>[veronicas_cleaned_df.csv]</parent-name>
            <remote-alias>tax</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[veronicas_cleaned_df.csv_65990D1FD53D43D6AA46D194364B05E0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tip</remote-name>
            <remote-type>5</remote-type>
            <local-name>[tip]</local-name>
            <parent-name>[veronicas_cleaned_df.csv]</parent-name>
            <remote-alias>tip</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[veronicas_cleaned_df.csv_65990D1FD53D43D6AA46D194364B05E0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>refunds_by_amount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[refunds_by_amount]</local-name>
            <parent-name>[veronicas_cleaned_df.csv]</parent-name>
            <remote-alias>refunds_by_amount</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[veronicas_cleaned_df.csv_65990D1FD53D43D6AA46D194364B05E0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cash</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cash]</local-name>
            <parent-name>[veronicas_cleaned_df.csv]</parent-name>
            <remote-alias>cash</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[veronicas_cleaned_df.csv_65990D1FD53D43D6AA46D194364B05E0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>card</remote-name>
            <remote-type>5</remote-type>
            <local-name>[card]</local-name>
            <parent-name>[veronicas_cleaned_df.csv]</parent-name>
            <remote-alias>card</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[veronicas_cleaned_df.csv_65990D1FD53D43D6AA46D194364B05E0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gift_card</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gift_card]</local-name>
            <parent-name>[veronicas_cleaned_df.csv]</parent-name>
            <remote-alias>gift_card</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[veronicas_cleaned_df.csv_65990D1FD53D43D6AA46D194364B05E0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fees</remote-name>
            <remote-type>5</remote-type>
            <local-name>[fees]</local-name>
            <parent-name>[veronicas_cleaned_df.csv]</parent-name>
            <remote-alias>fees</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[veronicas_cleaned_df.csv_65990D1FD53D43D6AA46D194364B05E0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_store_open</remote-name>
            <remote-type>20</remote-type>
            <local-name>[is_store_open]</local-name>
            <parent-name>[veronicas_cleaned_df.csv]</parent-name>
            <remote-alias>is_store_open</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[veronicas_cleaned_df.csv_65990D1FD53D43D6AA46D194364B05E0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>mean_temp_c</remote-name>
            <remote-type>5</remote-type>
            <local-name>[mean_temp_c]</local-name>
            <parent-name>[veronicas_cleaned_df.csv]</parent-name>
            <remote-alias>mean_temp_c</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[veronicas_cleaned_df.csv_65990D1FD53D43D6AA46D194364B05E0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_rain_mm</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_rain_mm]</local-name>
            <parent-name>[veronicas_cleaned_df.csv]</parent-name>
            <remote-alias>total_rain_mm</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[veronicas_cleaned_df.csv_65990D1FD53D43D6AA46D194364B05E0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_precip_mm</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_precip_mm]</local-name>
            <parent-name>[veronicas_cleaned_df.csv]</parent-name>
            <remote-alias>total_precip_mm</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[veronicas_cleaned_df.csv_65990D1FD53D43D6AA46D194364B05E0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_snow_mm</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_snow_mm]</local-name>
            <parent-name>[veronicas_cleaned_df.csv]</parent-name>
            <remote-alias>total_snow_mm</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[veronicas_cleaned_df.csv_65990D1FD53D43D6AA46D194364B05E0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>holiday_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[holiday_name]</local-name>
            <parent-name>[veronicas_cleaned_df.csv]</parent-name>
            <remote-alias>holiday_name</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[veronicas_cleaned_df.csv_65990D1FD53D43D6AA46D194364B05E0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_holiday</remote-name>
            <remote-type>20</remote-type>
            <local-name>[is_holiday]</local-name>
            <parent-name>[veronicas_cleaned_df.csv]</parent-name>
            <remote-alias>is_holiday</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[veronicas_cleaned_df.csv_65990D1FD53D43D6AA46D194364B05E0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_holiday_prev_1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[is_holiday_prev_1]</local-name>
            <parent-name>[veronicas_cleaned_df.csv]</parent-name>
            <remote-alias>is_holiday_prev_1</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[veronicas_cleaned_df.csv_65990D1FD53D43D6AA46D194364B05E0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_holiday_next_1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[is_holiday_next_1]</local-name>
            <parent-name>[veronicas_cleaned_df.csv]</parent-name>
            <remote-alias>is_holiday_next_1</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[veronicas_cleaned_df.csv_65990D1FD53D43D6AA46D194364B05E0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_holiday_prev_2</remote-name>
            <remote-type>20</remote-type>
            <local-name>[is_holiday_prev_2]</local-name>
            <parent-name>[veronicas_cleaned_df.csv]</parent-name>
            <remote-alias>is_holiday_prev_2</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[veronicas_cleaned_df.csv_65990D1FD53D43D6AA46D194364B05E0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_holiday_next_2</remote-name>
            <remote-type>20</remote-type>
            <local-name>[is_holiday_next_2]</local-name>
            <parent-name>[veronicas_cleaned_df.csv]</parent-name>
            <remote-alias>is_holiday_next_2</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[veronicas_cleaned_df.csv_65990D1FD53D43D6AA46D194364B05E0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>temp_category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[temp_category]</local-name>
            <parent-name>[veronicas_cleaned_df.csv]</parent-name>
            <remote-alias>temp_category</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[veronicas_cleaned_df.csv_65990D1FD53D43D6AA46D194364B05E0]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>season</remote-name>
            <remote-type>129</remote-type>
            <local-name>[season]</local-name>
            <parent-name>[veronicas_cleaned_df.csv]</parent-name>
            <remote-alias>season</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[veronicas_cleaned_df.csv_65990D1FD53D43D6AA46D194364B05E0]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[usr:Calculation_1003387949334269954:qk]&quot;' value='Card' />
          <alias key='&quot;[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[usr:Calculation_1003387949334462467:qk]&quot;' value='Cash' />
          <alias key='&quot;[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[usr:Calculation_1003387949334532100:qk]&quot;' value='Gift Card' />
        </aliases>
      </column>
      <column caption='Month' datatype='string' name='[Calculation_1003387949331865601]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='DATENAME(&apos;month&apos;, [date])' />
      </column>
      <column caption='Card Sales Percentage' datatype='real' datatype-customized='true' default-format='p0.0%' name='[Calculation_1003387949334269954]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([card]) / (SUM([card]) + SUM([cash]) + SUM([gift_card]))' />
      </column>
      <column caption='Cash Sales Percentage' datatype='real' default-format='p0.0%' name='[Calculation_1003387949334462467]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([cash]) / (SUM([card]) + SUM([cash]) + SUM([gift_card]))' />
      </column>
      <column caption='Gift Card Sales Percentage' datatype='real' default-format='p0.0%' name='[Calculation_1003387949334532100]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([gift_card]) / (SUM([card]) + SUM([cash]) + SUM([gift_card]))' />
      </column>
      <column caption='gift card sales percentage' datatype='real' name='[Calculation_1098878335213142016]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([gift_card]) / SUM([net_sales])' />
      </column>
      <column aggregation='Sum' caption='Year' datatype='integer' name='[Calculation_1184657834400739328]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='YEAR([date])' />
      </column>
      <column caption='Year-Month' datatype='string' name='[Calculation_1184657834401181697]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='STR(YEAR([date])) + &quot;-&quot; + RIGHT(&quot;0&quot; + STR(MONTH([date])), 2)' />
      </column>
      <column caption='MoM Growth Rate' datatype='real' default-format='p0.00%' name='[Calculation_1184657834401345538]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF ISNULL(LOOKUP(SUM([net_sales]), -1)) THEN&#10;    0&#10;ELSE&#10;    (SUM([net_sales]) - LOOKUP(SUM([net_sales]), -1)) / LOOKUP(SUM([net_sales]), -1)&#10;END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Holiday Sales Percentage' datatype='real' name='[Calculation_1184657834406223875]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([net_sales]) / TOTAL(SUM([net_sales]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Holiday Type' datatype='string' name='[Calculation_1381971793154822144]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [is_holiday] = 1 THEN &quot;Holiday Sales&quot; ELSE &quot;Non-Holiday Sales&quot; END' />
      </column>
      <column caption='Sales Percentage' datatype='real' name='[Calculation_1381971793155510273]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([net_sales]) / TOTAL(SUM([net_sales]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Total Net Sales' datatype='real' name='[Calculation_1381971793160646662]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED : SUM([net_sales]) }' />
      </column>
      <column caption='Average Sales Percentage' datatype='real' name='[Calculation_1381971793160716295]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([net_sales]) / SUM([Calculation_1381971793160646662])' />
      </column>
      <column caption='Average Net Sales' datatype='real' name='[Calculation_1381971793161994248]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([net_sales]) / COUNT([net_sales])' />
      </column>
      <column caption='Total Average Net Sales' datatype='real' name='[Calculation_1381971793162166281]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED : SUM([net_sales]) / COUNT([net_sales]) }' />
      </column>
      <column caption='Temperature Category Sales Percentage' datatype='real' name='[Calculation_1381971793162244106]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(AVG([net_sales]) / SUM([Calculation_1381971793162166281])) * 100' />
      </column>
      <column caption='Two Days Before Holiday' datatype='real' name='[Calculation_1455084918393348096]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [is_holiday_prev_2] = 1 THEN [net_sales] END' />
      </column>
      <column caption='Day Before' datatype='real' name='[Calculation_1455084918393552897]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [is_holiday_prev_1] = 1 THEN [net_sales] END' />
      </column>
      <column caption='Holiday' datatype='real' name='[Calculation_1455084918393708546]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [is_holiday] = 1 THEN [net_sales] END' />
      </column>
      <column caption='Day After' datatype='real' name='[Calculation_1455084918393921539]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [is_holiday_next_1] = 1 THEN [net_sales] END' />
      </column>
      <column caption='Two Days After' datatype='real' name='[Calculation_1455084918393982980]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [is_holiday_next_2] = 1 THEN [net_sales] END' />
      </column>
      <column caption='Holiday Timing' datatype='string' name='[Calculation_1455084918394060805]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [is_holiday_prev_2] = 1 THEN &apos;Two Days Before&apos;&#10;ELSEIF [is_holiday_prev_1] = 1 THEN &apos;Day Before&apos;&#10;ELSEIF [is_holiday] = 1 THEN &apos;Holiday&apos;&#10;ELSEIF [is_holiday_next_1] = 1 THEN &apos;Day After&apos;&#10;ELSEIF [is_holiday_next_2] = 1 THEN &apos;Two Days After&apos;&#10;ELSE &apos;Regular Day&apos;&#10;END' />
      </column>
      <column caption='Average Net Sales Holiday Time' datatype='real' name='[Calculation_1455084918394679303]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{FIXED [Calculation_1455084918394060805]: AVG([net_sales])}' />
      </column>
      <column caption='Year-Week' datatype='string' name='[Calculation_1455084918396940296]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='STR(YEAR([date])) + &apos;-&apos; + RIGHT(&apos;0&apos; + STR(DATEPART(&apos;week&apos;, [date])), 2)' />
      </column>
      <column caption='Weekly Avg Net Sales' datatype='real' name='[Calculation_1455084918397009929]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{FIXED [Calculation_1455084918396940296]: AVG([net_sales])}' />
      </column>
      <column caption='veronicas_cleaned_df.csv' datatype='table' name='[__tableau_internal_object_id__].[veronicas_cleaned_df.csv_65990D1FD53D43D6AA46D194364B05E0]' role='measure' type='quantitative' />
      <column caption='Card' datatype='real' name='[card]' role='measure' type='quantitative' />
      <column caption='Cash' datatype='real' name='[cash]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Day' datatype='string' name='[day]' role='dimension' type='nominal' />
      <column caption='Discounts Comps' datatype='real' name='[discounts_comps]' role='measure' type='quantitative' />
      <column caption='Fees' datatype='real' name='[fees]' role='measure' type='quantitative' />
      <column caption='Gift Card' datatype='real' name='[gift_card]' role='measure' type='quantitative' />
      <column caption='Gift Card Sales' datatype='real' name='[gift_card_sales]' role='measure' type='quantitative' />
      <column caption='Gross Sales' datatype='real' name='[gross_sales]' role='measure' type='quantitative' />
      <column caption='Holiday Name' datatype='string' name='[holiday_name]' role='dimension' type='nominal' />
      <column caption='Is Holiday' datatype='integer' datatype-customized='true' name='[is_holiday]' role='dimension' type='ordinal'>
        <aliases>
          <alias key='0' value='Regular Day' />
          <alias key='1' value='Holiday' />
        </aliases>
      </column>
      <column caption='Is Holiday Next 1' datatype='integer' name='[is_holiday_next_1]' role='measure' type='quantitative' />
      <column caption='Is Holiday Next 2' datatype='integer' name='[is_holiday_next_2]' role='measure' type='quantitative' />
      <column caption='Is Holiday Prev 1' datatype='integer' name='[is_holiday_prev_1]' role='measure' type='quantitative' />
      <column caption='Is Holiday Prev 2' datatype='integer' name='[is_holiday_prev_2]' role='measure' type='quantitative' />
      <column caption='Is Store Open' datatype='integer' name='[is_store_open]' role='measure' type='quantitative' />
      <column caption='Mean Temp C' datatype='real' name='[mean_temp_c]' role='measure' type='quantitative' />
      <column caption='Net Sales' datatype='real' name='[net_sales]' role='measure' type='quantitative' />
      <column caption='Refunds By Amount' datatype='real' name='[refunds_by_amount]' role='measure' type='quantitative' />
      <column caption='Returns' datatype='real' name='[returns]' role='measure' type='quantitative' />
      <column caption='Season' datatype='string' name='[season]' role='dimension' type='nominal' />
      <column caption='Tax' datatype='real' name='[tax]' role='measure' type='quantitative' />
      <column caption='Temp Category' datatype='string' name='[temp_category]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;Cold&quot;' value='Cold (&lt;=5c)' />
          <alias key='&quot;Comfortable&quot;' value='Comfortable (15-25c)' />
          <alias key='&quot;Cool&quot;' value='Cool (6-14c)' />
          <alias key='&quot;Hot&quot;' value='Hot (&gt;25c)' />
        </aliases>
      </column>
      <column caption='Tip' datatype='real' name='[tip]' role='measure' type='quantitative' />
      <column caption='Total Precip Mm' datatype='real' name='[total_precip_mm]' role='measure' type='quantitative' />
      <column caption='Total Rain Mm' datatype='real' name='[total_rain_mm]' role='measure' type='quantitative' />
      <column caption='Total Snow Mm' datatype='real' name='[total_snow_mm]' role='measure' type='quantitative' />
      <column-instance column='[discounts_comps]' derivation='Avg' name='[avg:discounts_comps:qk]' pivot='key' type='quantitative' />
      <column-instance column='[gift_card_sales]' derivation='Avg' name='[avg:gift_card_sales:qk]' pivot='key' type='quantitative' />
      <column-instance column='[mean_temp_c]' derivation='Avg' name='[avg:mean_temp_c:qk]' pivot='key' type='quantitative' />
      <column-instance column='[net_sales]' derivation='Avg' name='[avg:net_sales:qk]' pivot='key' type='quantitative' />
      <column-instance column='[tip]' derivation='Avg' name='[avg:tip:qk]' pivot='key' type='quantitative' />
      <column-instance column='[mean_temp_c]' derivation='Count' name='[cnt:mean_temp_c:qk]' pivot='key' type='quantitative' />
      <column-instance column='[is_holiday]' derivation='CountD' name='[ctd:is_holiday:qk]' pivot='key' type='quantitative' />
      <column-instance column='[mean_temp_c]' derivation='CountD' name='[ctd:mean_temp_c:qk]' pivot='key' type='quantitative' />
      <column-instance column='[net_sales]' derivation='Median' name='[med:net_sales:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1003387949331865601]' derivation='None' name='[none:Calculation_1003387949331865601:nk]' pivot='key' type='nominal' />
      <column-instance column='[day]' derivation='None' name='[none:day:nk]' pivot='key' type='nominal' />
      <column-instance column='[holiday_name]' derivation='None' name='[none:holiday_name:nk]' pivot='key' type='nominal' />
      <column-instance column='[is_holiday]' derivation='None' name='[none:is_holiday:ok]' pivot='key' type='ordinal' />
      <column-instance column='[season]' derivation='None' name='[none:season:nk]' pivot='key' type='nominal' />
      <column-instance column='[temp_category]' derivation='None' name='[none:temp_category:nk]' pivot='key' type='nominal' />
      <column-instance column='[net_sales]' derivation='Avg' name='[pcdf:avg:net_sales:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[net_sales]' derivation='Avg' name='[pcto:avg:net_sales:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[net_sales]' derivation='Sum' name='[pcto:sum:net_sales:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[card]' derivation='Sum' name='[sum:card:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cash]' derivation='Sum' name='[sum:cash:qk]' pivot='key' type='quantitative' />
      <column-instance column='[discounts_comps]' derivation='Sum' name='[sum:discounts_comps:qk]' pivot='key' type='quantitative' />
      <column-instance column='[fees]' derivation='Sum' name='[sum:fees:qk]' pivot='key' type='quantitative' />
      <column-instance column='[gift_card]' derivation='Sum' name='[sum:gift_card:qk]' pivot='key' type='quantitative' />
      <column-instance column='[gift_card_sales]' derivation='Sum' name='[sum:gift_card_sales:qk]' pivot='key' type='quantitative' />
      <column-instance column='[gross_sales]' derivation='Sum' name='[sum:gross_sales:qk]' pivot='key' type='quantitative' />
      <column-instance column='[is_holiday]' derivation='Sum' name='[sum:is_holiday:qk]' pivot='key' type='quantitative' />
      <column-instance column='[is_holiday_next_1]' derivation='Sum' name='[sum:is_holiday_next_1:qk]' pivot='key' type='quantitative' />
      <column-instance column='[is_holiday_next_2]' derivation='Sum' name='[sum:is_holiday_next_2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[is_holiday_prev_1]' derivation='Sum' name='[sum:is_holiday_prev_1:qk]' pivot='key' type='quantitative' />
      <column-instance column='[is_holiday_prev_2]' derivation='Sum' name='[sum:is_holiday_prev_2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[is_store_open]' derivation='Sum' name='[sum:is_store_open:qk]' pivot='key' type='quantitative' />
      <column-instance column='[mean_temp_c]' derivation='Sum' name='[sum:mean_temp_c:qk]' pivot='key' type='quantitative' />
      <column-instance column='[net_sales]' derivation='Sum' name='[sum:net_sales:qk]' pivot='key' type='quantitative' />
      <column-instance column='[refunds_by_amount]' derivation='Sum' name='[sum:refunds_by_amount:qk]' pivot='key' type='quantitative' />
      <column-instance column='[returns]' derivation='Sum' name='[sum:returns:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1003387949334269954]' derivation='User' name='[usr:Calculation_1003387949334269954:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1003387949334462467]' derivation='User' name='[usr:Calculation_1003387949334462467:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1003387949334532100]' derivation='User' name='[usr:Calculation_1003387949334532100:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1381971793162244106]' derivation='User' name='[usr:Calculation_1381971793162244106:qk]' pivot='key' type='quantitative' />
      <column-instance column='[net_sales]' derivation='Avg' name='[win:avg:net_sales:qk:2]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='-2' ordering-field='[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[holiday_name]' ordering-type='Field' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <column-instance column='[net_sales]' derivation='Avg' name='[win:avg:net_sales:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='-2' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='/var/folders/hh/hx7f_d913pbf5gbc452qrps00000gp/T/tableau-temp/#TableauTemp_1ezu0r31936dk413nkd6b0ymilnf.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='12/17/2024 08:44:38 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>0</ordinal>
              <family>veronicas_cleaned_df.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>669</approx-count>
              <contains-null>true</contains-null>
              <object-id>[veronicas_cleaned_df.csv_65990D1FD53D43D6AA46D194364B05E0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>day</remote-name>
              <remote-type>129</remote-type>
              <local-name>[day]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>day</remote-alias>
              <ordinal>1</ordinal>
              <family>veronicas_cleaned_df.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[veronicas_cleaned_df.csv_65990D1FD53D43D6AA46D194364B05E0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>gross_sales</remote-name>
              <remote-type>5</remote-type>
              <local-name>[gross_sales]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>gross_sales</remote-alias>
              <ordinal>2</ordinal>
              <family>veronicas_cleaned_df.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>610</approx-count>
              <contains-null>true</contains-null>
              <object-id>[veronicas_cleaned_df.csv_65990D1FD53D43D6AA46D194364B05E0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>returns</remote-name>
              <remote-type>5</remote-type>
              <local-name>[returns]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>returns</remote-alias>
              <ordinal>3</ordinal>
              <family>veronicas_cleaned_df.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>44</approx-count>
              <contains-null>true</contains-null>
              <object-id>[veronicas_cleaned_df.csv_65990D1FD53D43D6AA46D194364B05E0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>discounts_comps</remote-name>
              <remote-type>5</remote-type>
              <local-name>[discounts_comps]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>discounts_comps</remote-alias>
              <ordinal>4</ordinal>
              <family>veronicas_cleaned_df.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>579</approx-count>
              <contains-null>true</contains-null>
              <object-id>[veronicas_cleaned_df.csv_65990D1FD53D43D6AA46D194364B05E0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>net_sales</remote-name>
              <remote-type>5</remote-type>
              <local-name>[net_sales]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>net_sales</remote-alias>
              <ordinal>5</ordinal>
              <family>veronicas_cleaned_df.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>610</approx-count>
              <contains-null>true</contains-null>
              <object-id>[veronicas_cleaned_df.csv_65990D1FD53D43D6AA46D194364B05E0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>gift_card_sales</remote-name>
              <remote-type>5</remote-type>
              <local-name>[gift_card_sales]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>gift_card_sales</remote-alias>
              <ordinal>6</ordinal>
              <family>veronicas_cleaned_df.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>39</approx-count>
              <contains-null>true</contains-null>
              <object-id>[veronicas_cleaned_df.csv_65990D1FD53D43D6AA46D194364B05E0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>tax</remote-name>
              <remote-type>5</remote-type>
              <local-name>[tax]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>tax</remote-alias>
              <ordinal>7</ordinal>
              <family>veronicas_cleaned_df.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>594</approx-count>
              <contains-null>true</contains-null>
              <object-id>[veronicas_cleaned_df.csv_65990D1FD53D43D6AA46D194364B05E0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>tip</remote-name>
              <remote-type>5</remote-type>
              <local-name>[tip]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>tip</remote-alias>
              <ordinal>8</ordinal>
              <family>veronicas_cleaned_df.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>587</approx-count>
              <contains-null>true</contains-null>
              <object-id>[veronicas_cleaned_df.csv_65990D1FD53D43D6AA46D194364B05E0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>refunds_by_amount</remote-name>
              <remote-type>5</remote-type>
              <local-name>[refunds_by_amount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>refunds_by_amount</remote-alias>
              <ordinal>9</ordinal>
              <family>veronicas_cleaned_df.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>9</approx-count>
              <contains-null>true</contains-null>
              <object-id>[veronicas_cleaned_df.csv_65990D1FD53D43D6AA46D194364B05E0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cash</remote-name>
              <remote-type>5</remote-type>
              <local-name>[cash]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cash</remote-alias>
              <ordinal>10</ordinal>
              <family>veronicas_cleaned_df.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>578</approx-count>
              <contains-null>true</contains-null>
              <object-id>[veronicas_cleaned_df.csv_65990D1FD53D43D6AA46D194364B05E0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>card</remote-name>
              <remote-type>5</remote-type>
              <local-name>[card]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>card</remote-alias>
              <ordinal>11</ordinal>
              <family>veronicas_cleaned_df.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>609</approx-count>
              <contains-null>true</contains-null>
              <object-id>[veronicas_cleaned_df.csv_65990D1FD53D43D6AA46D194364B05E0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>gift_card</remote-name>
              <remote-type>5</remote-type>
              <local-name>[gift_card]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>gift_card</remote-alias>
              <ordinal>12</ordinal>
              <family>veronicas_cleaned_df.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>229</approx-count>
              <contains-null>true</contains-null>
              <object-id>[veronicas_cleaned_df.csv_65990D1FD53D43D6AA46D194364B05E0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>fees</remote-name>
              <remote-type>5</remote-type>
              <local-name>[fees]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>fees</remote-alias>
              <ordinal>13</ordinal>
              <family>veronicas_cleaned_df.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>587</approx-count>
              <contains-null>true</contains-null>
              <object-id>[veronicas_cleaned_df.csv_65990D1FD53D43D6AA46D194364B05E0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>is_store_open</remote-name>
              <remote-type>20</remote-type>
              <local-name>[is_store_open]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>is_store_open</remote-alias>
              <ordinal>14</ordinal>
              <family>veronicas_cleaned_df.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <object-id>[veronicas_cleaned_df.csv_65990D1FD53D43D6AA46D194364B05E0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>mean_temp_c</remote-name>
              <remote-type>5</remote-type>
              <local-name>[mean_temp_c]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>mean_temp_c</remote-alias>
              <ordinal>15</ordinal>
              <family>veronicas_cleaned_df.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>310</approx-count>
              <contains-null>true</contains-null>
              <object-id>[veronicas_cleaned_df.csv_65990D1FD53D43D6AA46D194364B05E0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_rain_mm</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_rain_mm]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_rain_mm</remote-alias>
              <ordinal>16</ordinal>
              <family>veronicas_cleaned_df.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>115</approx-count>
              <contains-null>true</contains-null>
              <object-id>[veronicas_cleaned_df.csv_65990D1FD53D43D6AA46D194364B05E0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_precip_mm</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_precip_mm]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_precip_mm</remote-alias>
              <ordinal>17</ordinal>
              <family>veronicas_cleaned_df.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>119</approx-count>
              <contains-null>true</contains-null>
              <object-id>[veronicas_cleaned_df.csv_65990D1FD53D43D6AA46D194364B05E0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_snow_mm</remote-name>
              <remote-type>5</remote-type>
              <local-name>[total_snow_mm]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_snow_mm</remote-alias>
              <ordinal>18</ordinal>
              <family>veronicas_cleaned_df.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>23</approx-count>
              <contains-null>true</contains-null>
              <object-id>[veronicas_cleaned_df.csv_65990D1FD53D43D6AA46D194364B05E0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>holiday_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[holiday_name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>holiday_name</remote-alias>
              <ordinal>19</ordinal>
              <family>veronicas_cleaned_df.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>10</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[veronicas_cleaned_df.csv_65990D1FD53D43D6AA46D194364B05E0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>is_holiday</remote-name>
              <remote-type>20</remote-type>
              <local-name>[is_holiday]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>is_holiday</remote-alias>
              <ordinal>20</ordinal>
              <family>veronicas_cleaned_df.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <object-id>[veronicas_cleaned_df.csv_65990D1FD53D43D6AA46D194364B05E0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>is_holiday_prev_1</remote-name>
              <remote-type>20</remote-type>
              <local-name>[is_holiday_prev_1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>is_holiday_prev_1</remote-alias>
              <ordinal>21</ordinal>
              <family>veronicas_cleaned_df.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <object-id>[veronicas_cleaned_df.csv_65990D1FD53D43D6AA46D194364B05E0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>is_holiday_next_1</remote-name>
              <remote-type>20</remote-type>
              <local-name>[is_holiday_next_1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>is_holiday_next_1</remote-alias>
              <ordinal>22</ordinal>
              <family>veronicas_cleaned_df.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <object-id>[veronicas_cleaned_df.csv_65990D1FD53D43D6AA46D194364B05E0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>is_holiday_prev_2</remote-name>
              <remote-type>20</remote-type>
              <local-name>[is_holiday_prev_2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>is_holiday_prev_2</remote-alias>
              <ordinal>23</ordinal>
              <family>veronicas_cleaned_df.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <object-id>[veronicas_cleaned_df.csv_65990D1FD53D43D6AA46D194364B05E0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>is_holiday_next_2</remote-name>
              <remote-type>20</remote-type>
              <local-name>[is_holiday_next_2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>is_holiday_next_2</remote-alias>
              <ordinal>24</ordinal>
              <family>veronicas_cleaned_df.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <object-id>[veronicas_cleaned_df.csv_65990D1FD53D43D6AA46D194364B05E0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>temp_category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[temp_category]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>temp_category</remote-alias>
              <ordinal>25</ordinal>
              <family>veronicas_cleaned_df.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[veronicas_cleaned_df.csv_65990D1FD53D43D6AA46D194364B05E0]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>season</remote-name>
              <remote-type>129</remote-type>
              <local-name>[season]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>season</remote-alias>
              <ordinal>26</ordinal>
              <family>veronicas_cleaned_df.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[veronicas_cleaned_df.csv_65990D1FD53D43D6AA46D194364B05E0]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:is_holiday:ok]' palette='red_gold_10_0' type='palette'>
            <map to='#b71d3e'>
              <bucket>1</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>0</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:temp_category:nk]' palette='red_gold_10_0' type='palette'>
            <map to='#b71d3e'>
              <bucket>&quot;Hot&quot;</bucket>
            </map>
            <map to='#de5747'>
              <bucket>&quot;Cool&quot;</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>&quot;Cold&quot;</bucket>
            </map>
            <map to='#fa8f4d'>
              <bucket>&quot;Comfortable&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:day:nk]' palette='red_gold_10_0' type='palette'>
            <map to='#b71d3e'>
              <bucket>&quot;Sunday&quot;</bucket>
            </map>
            <map to='#cb3c43'>
              <bucket>&quot;Saturday&quot;</bucket>
            </map>
            <map to='#de5747'>
              <bucket>&quot;Friday&quot;</bucket>
            </map>
            <map to='#ee734a'>
              <bucket>&quot;Thursday&quot;</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>&quot;Monday&quot;</bucket>
            </map>
            <map to='#f8b053'>
              <bucket>&quot;Tuesday&quot;</bucket>
            </map>
            <map to='#fa8f4d'>
              <bucket>&quot;Wednesday&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:season:nk]' palette='red_gold_10_0' type='palette'>
            <map to='#b71d3e'>
              <bucket>&quot;Winter&quot;</bucket>
            </map>
            <map to='#de5747'>
              <bucket>&quot;Summer&quot;</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>&quot;Fall&quot;</bucket>
            </map>
            <map to='#fa8f4d'>
              <bucket>&quot;Spring&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_1003387949331865601:nk]' palette='red_gold_10_0' type='palette'>
            <map to='#b71d3e'>
              <bucket>&quot;December&quot;</bucket>
            </map>
            <map to='#c22f40'>
              <bucket>&quot;November&quot;</bucket>
            </map>
            <map to='#cd3e43'>
              <bucket>&quot;October&quot;</bucket>
            </map>
            <map to='#d74d46'>
              <bucket>&quot;September&quot;</bucket>
            </map>
            <map to='#e15c48'>
              <bucket>&quot;August&quot;</bucket>
            </map>
            <map to='#e96b49'>
              <bucket>&quot;July&quot;</bucket>
            </map>
            <map to='#f17a4a'>
              <bucket>&quot;June&quot;</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>&quot;January&quot;</bucket>
            </map>
            <map to='#f5bf5a'>
              <bucket>&quot;February&quot;</bucket>
            </map>
            <map to='#f8894c'>
              <bucket>&quot;May&quot;</bucket>
            </map>
            <map to='#f8ad52'>
              <bucket>&quot;March&quot;</bucket>
            </map>
            <map to='#fb9b4e'>
              <bucket>&quot;April&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:holiday_name:nk]' palette='red_gold_10_0' type='palette'>
            <map to='#b71d3e'>
              <bucket>&quot;Labour Day&quot;</bucket>
            </map>
            <map to='#c63541'>
              <bucket>&quot;Christmas Day&quot;</bucket>
            </map>
            <map to='#d14544'>
              <bucket>&quot;Regular Day&quot;</bucket>
            </map>
            <map to='#d54a45'>
              <bucket>&quot;Thanksgiving Day&quot;</bucket>
            </map>
            <map to='#e25e48'>
              <bucket>&quot;Victoria Day&quot;</bucket>
            </map>
            <map to='#ee734a'>
              <bucket>&quot;Family Day&quot;</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>&quot;Good Friday&quot;</bucket>
            </map>
            <map to='#f6b957'>
              <bucket>&quot;Boxing Day&quot;</bucket>
            </map>
            <map to='#f7874b'>
              <bucket>&quot;New Year&apos;s Day&quot;</bucket>
            </map>
            <map to='#faa04f'>
              <bucket>&quot;Canada Day&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' palette='red_gold_10_0' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[sum:card:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[avg:discounts_comps:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[sum:discounts_comps:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[sum:is_holiday_next_2:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[sum:gross_sales:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[sum:fees:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[sum:refunds_by_amount:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[avg:mean_temp_c:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[cnt:mean_temp_c:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[ctd:mean_temp_c:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[sum:mean_temp_c:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[sum:gift_card:qk]&quot;</bucket>
            </map>
            <map to='#b71d3e'>
              <bucket>&quot;[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[avg:tip:qk]&quot;</bucket>
            </map>
            <map to='#b71d3e'>
              <bucket>&quot;[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[usr:Calculation_1003387949334532100:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[sum:is_holiday_prev_1:qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[sum:is_holiday_prev_2:qk]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[sum:net_sales:qk]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[sum:returns:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[ctd:is_holiday:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[sum:is_holiday:qk]&quot;</bucket>
            </map>
            <map to='#ee734a'>
              <bucket>&quot;[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[usr:Calculation_1003387949334462467:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[avg:gift_card_sales:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[sum:gift_card_sales:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[sum:cash:qk]&quot;</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>&quot;[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[avg:net_sales:qk]&quot;</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>&quot;[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[med:net_sales:qk]&quot;</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>&quot;[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[pcdf:avg:net_sales:qk]&quot;</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>&quot;[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[pcto:avg:net_sales:qk]&quot;</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>&quot;[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[pcto:sum:net_sales:qk]&quot;</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>&quot;[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[usr:Calculation_1003387949334269954:qk]&quot;</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>&quot;[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[usr:Calculation_1381971793162244106:qk]&quot;</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>&quot;[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[usr:Calculation1:qk]&quot;</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>&quot;[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[usr:Calculation2:qk]&quot;</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>&quot;[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[win:avg:net_sales:qk:2]&quot;</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>&quot;[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[win:avg:net_sales:qk]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[sum:is_store_open:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[sum:is_holiday_next_1:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='date' />
        <field-sort-custom-order field='Calculation_1184657834401181697' />
        <field-sort-custom-order field='Calculation_1184657834400739328' />
        <field-sort-custom-order field='Calculation_1003387949331865601' />
        <field-sort-custom-order field='day' />
        <field-sort-custom-order field='gross_sales' />
        <field-sort-custom-order field='returns' />
        <field-sort-custom-order field='discounts_comps' />
        <field-sort-custom-order field='net_sales' />
        <field-sort-custom-order field='gift_card_sales' />
        <field-sort-custom-order field='Calculation_1098878335213142016' />
        <field-sort-custom-order field='tax' />
        <field-sort-custom-order field='tip' />
        <field-sort-custom-order field='refunds_by_amount' />
        <field-sort-custom-order field='cash' />
        <field-sort-custom-order field='Calculation_1003387949334462467' />
        <field-sort-custom-order field='card' />
        <field-sort-custom-order field='Calculation_1003387949334269954' />
        <field-sort-custom-order field='gift_card' />
        <field-sort-custom-order field='Calculation_1003387949334532100' />
        <field-sort-custom-order field='fees' />
        <field-sort-custom-order field='is_store_open' />
        <field-sort-custom-order field='mean_temp_c' />
        <field-sort-custom-order field='total_rain_mm' />
        <field-sort-custom-order field='total_precip_mm' />
        <field-sort-custom-order field='total_snow_mm' />
        <field-sort-custom-order field='holiday_name' />
        <field-sort-custom-order field='is_holiday' />
        <field-sort-custom-order field='Calculation_1455084918393708546' />
        <field-sort-custom-order field='Calculation_1381971793154822144' />
        <field-sort-custom-order field='is_holiday_prev_1' />
        <field-sort-custom-order field='is_holiday_next_1' />
        <field-sort-custom-order field='is_holiday_prev_2' />
        <field-sort-custom-order field='is_holiday_next_2' />
        <field-sort-custom-order field='temp_category' />
        <field-sort-custom-order field='season' />
        <field-sort-custom-order field='Geometry (generated)' />
        <field-sort-custom-order field='Latitude (generated)' />
        <field-sort-custom-order field='Longitude (generated)' />
        <field-sort-custom-order field=':Measure Names' />
        <field-sort-custom-order field='Multiple Values' />
      </field-sort-info>
      <object-graph>
        <objects>
          <object caption='veronicas_cleaned_df.csv' id='veronicas_cleaned_df.csv_65990D1FD53D43D6AA46D194364B05E0'>
            <properties context=''>
              <relation connection='textscan.02m8wid0gnubxk15kdlpz1cw6id0' name='veronicas_cleaned_df.csv' table='[veronicas_cleaned_df#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
                  <column datatype='date' name='date' ordinal='0' />
                  <column datatype='string' name='day' ordinal='1' />
                  <column datatype='real' name='gross_sales' ordinal='2' />
                  <column datatype='real' name='returns' ordinal='3' />
                  <column datatype='real' name='discounts_comps' ordinal='4' />
                  <column datatype='real' name='net_sales' ordinal='5' />
                  <column datatype='real' name='gift_card_sales' ordinal='6' />
                  <column datatype='real' name='tax' ordinal='7' />
                  <column datatype='real' name='tip' ordinal='8' />
                  <column datatype='real' name='refunds_by_amount' ordinal='9' />
                  <column datatype='real' name='cash' ordinal='10' />
                  <column datatype='real' name='card' ordinal='11' />
                  <column datatype='real' name='gift_card' ordinal='12' />
                  <column datatype='real' name='fees' ordinal='13' />
                  <column datatype='integer' name='is_store_open' ordinal='14' />
                  <column datatype='real' name='mean_temp_c' ordinal='15' />
                  <column datatype='real' name='total_rain_mm' ordinal='16' />
                  <column datatype='real' name='total_precip_mm' ordinal='17' />
                  <column datatype='real' name='total_snow_mm' ordinal='18' />
                  <column datatype='string' name='holiday_name' ordinal='19' />
                  <column datatype='integer' name='is_holiday' ordinal='20' />
                  <column datatype='integer' name='is_holiday_prev_1' ordinal='21' />
                  <column datatype='integer' name='is_holiday_next_1' ordinal='22' />
                  <column datatype='integer' name='is_holiday_prev_2' ordinal='23' />
                  <column datatype='integer' name='is_holiday_next_2' ordinal='24' />
                  <column datatype='string' name='temp_category' ordinal='25' />
                  <column datatype='string' name='season' ordinal='26' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='holiday_sales_percentages' inline='true' name='federated.007ui6i10h7seg1c3163c0wqbctc' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='holiday_sales_percentages' name='textscan.0ol7y4n091xkz81eitgsn1fo83ar'>
            <connection class='textscan' directory='/Users/jonathantsui/Downloads' filename='holiday_sales_percentages.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0ol7y4n091xkz81eitgsn1fo83ar' name='holiday_sales_percentages.csv' table='[holiday_sales_percentages#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='string' name='Category' ordinal='0' />
            <column datatype='real' name='Percentage' ordinal='1' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[holiday_sales_percentages.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_CA&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[holiday_sales_percentages.csv]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[holiday_sales_percentages.csv_40396D48961B4E0FBAFD254AC28935AF]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Percentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Percentage]</local-name>
            <parent-name>[holiday_sales_percentages.csv]</parent-name>
            <remote-alias>Percentage</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[holiday_sales_percentages.csv_40396D48961B4E0FBAFD254AC28935AF]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Category]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;Holiday Sales&quot;' value='Holiday' />
          <alias key='&quot;Non-Holiday Sales&quot;' value='Non-Holiday' />
        </aliases>
      </column>
      <column caption='holiday_sales_percentages.csv' datatype='table' name='[__tableau_internal_object_id__].[holiday_sales_percentages.csv_40396D48961B4E0FBAFD254AC28935AF]' role='measure' type='quantitative' />
      <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='/var/folders/hh/hx7f_d913pbf5gbc452qrps00000gp/T/tableau-temp/#TableauTemp_0cmpqzl0b1rkjp127g53b0j1izhk.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='12/18/2024 07:58:18 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Category]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Category</remote-alias>
              <ordinal>0</ordinal>
              <family>holiday_sales_percentages.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[holiday_sales_percentages.csv_40396D48961B4E0FBAFD254AC28935AF]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Percentage</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Percentage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Percentage</remote-alias>
              <ordinal>1</ordinal>
              <family>holiday_sales_percentages.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <object-id>[holiday_sales_percentages.csv_40396D48961B4E0FBAFD254AC28935AF]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Category:nk]' palette='red_gold_10_0' type='palette'>
            <map to='#b71d3e'>
              <bucket>&quot;Non-Holiday Sales&quot;</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>&quot;Holiday Sales&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='holiday_sales_percentages.csv' id='holiday_sales_percentages.csv_40396D48961B4E0FBAFD254AC28935AF'>
            <properties context=''>
              <relation connection='textscan.0ol7y4n091xkz81eitgsn1fo83ar' name='holiday_sales_percentages.csv' table='[holiday_sales_percentages#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
                  <column datatype='string' name='Category' ordinal='0' />
                  <column datatype='real' name='Percentage' ordinal='1' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='temperature_impact_sales_percentage' inline='true' name='federated.1h8b6x8008pmm214m1llr0u1ezik' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='temperature_impact_sales_percentage' name='textscan.1fiub3v15ww5a919pffac0d6mesi'>
            <connection class='textscan' directory='/Users/jonathantsui/Downloads' filename='temperature_impact_sales_percentage.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1fiub3v15ww5a919pffac0d6mesi' name='temperature_impact_sales_percentage.csv' table='[temperature_impact_sales_percentage#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='string' name='Temperature Category' ordinal='0' />
            <column datatype='real' name='Percentage of Total Sales' ordinal='1' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[temperature_impact_sales_percentage.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_CA&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Temperature Category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Temperature Category]</local-name>
            <parent-name>[temperature_impact_sales_percentage.csv]</parent-name>
            <remote-alias>Temperature Category</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[temperature_impact_sales_percentage.csv_7FF6B716B4D94CA0B134E2AF8A4DAFE8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Percentage of Total Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Percentage of Total Sales]</local-name>
            <parent-name>[temperature_impact_sales_percentage.csv]</parent-name>
            <remote-alias>Percentage of Total Sales</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[temperature_impact_sales_percentage.csv_7FF6B716B4D94CA0B134E2AF8A4DAFE8]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Temperature Category]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;Cold&quot;' value='Cold (&lt;=5c)' />
          <alias key='&quot;Comfortable&quot;' value='Comfortable (15-25c)' />
          <alias key='&quot;Cool&quot;' value='Cool (6-14c)' />
          <alias key='&quot;Hot&quot;' value='Hot (&gt;25c)' />
        </aliases>
      </column>
      <column caption='temperature_impact_sales_percentage.csv' datatype='table' name='[__tableau_internal_object_id__].[temperature_impact_sales_percentage.csv_7FF6B716B4D94CA0B134E2AF8A4DAFE8]' role='measure' type='quantitative' />
      <column-instance column='[Temperature Category]' derivation='None' name='[none:Temperature Category:nk]' pivot='key' type='nominal' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='/var/folders/hh/hx7f_d913pbf5gbc452qrps00000gp/T/tableau-temp/#TableauTemp_0o2806c0bobfl8133sizr0qebluq.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='12/18/2024 08:35:46 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Temperature Category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Temperature Category]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Temperature Category</remote-alias>
              <ordinal>0</ordinal>
              <family>temperature_impact_sales_percentage.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[temperature_impact_sales_percentage.csv_7FF6B716B4D94CA0B134E2AF8A4DAFE8]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Percentage of Total Sales</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Percentage of Total Sales]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Percentage of Total Sales</remote-alias>
              <ordinal>1</ordinal>
              <family>temperature_impact_sales_percentage.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <object-id>[temperature_impact_sales_percentage.csv_7FF6B716B4D94CA0B134E2AF8A4DAFE8]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Temperature Category:nk]' palette='red_gold_10_0' type='palette'>
            <map to='#b71d3e'>
              <bucket>&quot;Hot&quot;</bucket>
            </map>
            <map to='#de5747'>
              <bucket>&quot;Cool&quot;</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>&quot;Cold&quot;</bucket>
            </map>
            <map to='#fa8f4d'>
              <bucket>&quot;Comfortable&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='temperature_impact_sales_percentage.csv' id='temperature_impact_sales_percentage.csv_7FF6B716B4D94CA0B134E2AF8A4DAFE8'>
            <properties context=''>
              <relation connection='textscan.1fiub3v15ww5a919pffac0d6mesi' name='temperature_impact_sales_percentage.csv' table='[temperature_impact_sales_percentage#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
                  <column datatype='string' name='Temperature Category' ordinal='0' />
                  <column datatype='real' name='Percentage of Total Sales' ordinal='1' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Discounts'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='10'>Average Discount Amount</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='veronicas_cleaned_df' name='federated.1b0nxao0z3w9sk1epa4qr1bhw27c' />
          </datasources>
          <datasource-dependencies datasource='federated.1b0nxao0z3w9sk1epa4qr1bhw27c'>
            <column caption='Month' datatype='string' name='[Calculation_1003387949331865601]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='DATENAME(&apos;month&apos;, [date])' />
            </column>
            <column-instance column='[discounts_comps]' derivation='Avg' name='[avg:discounts_comps:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Discounts Comps' datatype='real' name='[discounts_comps]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1003387949331865601]' derivation='None' name='[none:Calculation_1003387949331865601:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <natural-sort column='[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[none:Calculation_1003387949331865601:nk]' direction='ASC' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[avg:discounts_comps:qk]' field-type='quantitative' reverse='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[none:Calculation_1003387949331865601:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[avg:discounts_comps:qk]</rows>
        <cols>[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[none:Calculation_1003387949331865601:nk]</cols>
      </table>
      <simple-id uuid='{6115C111-E1BD-43BE-8CC6-D5D5B16F94CA}' />
    </worksheet>
    <worksheet name='GC'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='10'>Average Gift Card Sales per Month</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='veronicas_cleaned_df' name='federated.1b0nxao0z3w9sk1epa4qr1bhw27c' />
          </datasources>
          <datasource-dependencies datasource='federated.1b0nxao0z3w9sk1epa4qr1bhw27c'>
            <column caption='Month' datatype='string' name='[Calculation_1003387949331865601]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='DATENAME(&apos;month&apos;, [date])' />
            </column>
            <column-instance column='[gift_card_sales]' derivation='Avg' name='[avg:gift_card_sales:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Gift Card Sales' datatype='real' name='[gift_card_sales]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1003387949331865601]' derivation='None' name='[none:Calculation_1003387949331865601:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[none:Calculation_1003387949331865601:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#edc948' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#e6130c' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[avg:gift_card_sales:qk]</rows>
        <cols>[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[none:Calculation_1003387949331865601:nk]</cols>
      </table>
      <simple-id uuid='{703D9A73-B815-40B1-9AFA-54AC67A410F7}' />
    </worksheet>
    <worksheet name='Holiday'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Average Sales Non-Holiday vs. Holiday</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='veronicas_cleaned_df' name='federated.1b0nxao0z3w9sk1epa4qr1bhw27c' />
          </datasources>
          <datasource-dependencies datasource='federated.1b0nxao0z3w9sk1epa4qr1bhw27c'>
            <column-instance column='[net_sales]' derivation='Avg' name='[avg:net_sales:qk]' pivot='key' type='quantitative' />
            <column caption='Is Holiday' datatype='integer' datatype-customized='true' name='[is_holiday]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='0' value='Regular Day' />
                <alias key='1' value='Holiday' />
              </aliases>
            </column>
            <column caption='Net Sales' datatype='real' name='[net_sales]' role='measure' type='quantitative' />
            <column-instance column='[is_holiday]' derivation='None' name='[none:is_holiday:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' data-class='subtotal' field='[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[avg:net_sales:qk]' value='p0%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[avg:net_sales:qk]' value='' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[none:is_holiday:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[avg:net_sales:qk]</rows>
        <cols>[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[none:is_holiday:ok]</cols>
      </table>
      <simple-id uuid='{E8D22220-28EB-46D0-B92C-18D36A5FA03E}' />
    </worksheet>
    <worksheet name='HolidayPercentage'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='11'># 2: Holiday vs. Non-Holiday Sales Percentage</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='holiday_sales_percentages' name='federated.007ui6i10h7seg1c3163c0wqbctc' />
          </datasources>
          <datasource-dependencies datasource='federated.007ui6i10h7seg1c3163c0wqbctc'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Holiday Sales&quot;' value='Holiday' />
                <alias key='&quot;Non-Holiday Sales&quot;' value='Non-Holiday' />
              </aliases>
            </column>
            <column datatype='real' name='[Percentage]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Percentage]' derivation='Sum' name='[sum:Percentage:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.007ui6i10h7seg1c3163c0wqbctc].[sum:Percentage:qk]' scope='rows' value='Percentage of Total Sales (%)' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.007ui6i10h7seg1c3163c0wqbctc].[none:Category:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.007ui6i10h7seg1c3163c0wqbctc].[sum:Percentage:qk]</rows>
        <cols>[federated.007ui6i10h7seg1c3163c0wqbctc].[none:Category:nk]</cols>
      </table>
      <simple-id uuid='{50689301-E582-46B4-A795-1076F5C38D03}' />
    </worksheet>
    <worksheet name='HolidayTiming'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='11'>Average Sales During Holiday Time</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='veronicas_cleaned_df' name='federated.1b0nxao0z3w9sk1epa4qr1bhw27c' />
          </datasources>
          <datasource-dependencies datasource='federated.1b0nxao0z3w9sk1epa4qr1bhw27c'>
            <column caption='Holiday Timing' datatype='string' name='[Calculation_1455084918394060805]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [is_holiday_prev_2] = 1 THEN &apos;Two Days Before&apos;&#10;ELSEIF [is_holiday_prev_1] = 1 THEN &apos;Day Before&apos;&#10;ELSEIF [is_holiday] = 1 THEN &apos;Holiday&apos;&#10;ELSEIF [is_holiday_next_1] = 1 THEN &apos;Day After&apos;&#10;ELSEIF [is_holiday_next_2] = 1 THEN &apos;Two Days After&apos;&#10;ELSE &apos;Regular Day&apos;&#10;END' />
            </column>
            <column caption='Average Net Sales Holiday Time' datatype='real' name='[Calculation_1455084918394679303]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{FIXED [Calculation_1455084918394060805]: AVG([net_sales])}' />
            </column>
            <column caption='Is Holiday' datatype='integer' datatype-customized='true' name='[is_holiday]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='0' value='Regular Day' />
                <alias key='1' value='Holiday' />
              </aliases>
            </column>
            <column caption='Is Holiday Next 1' datatype='integer' name='[is_holiday_next_1]' role='measure' type='quantitative' />
            <column caption='Is Holiday Next 2' datatype='integer' name='[is_holiday_next_2]' role='measure' type='quantitative' />
            <column caption='Is Holiday Prev 1' datatype='integer' name='[is_holiday_prev_1]' role='measure' type='quantitative' />
            <column caption='Is Holiday Prev 2' datatype='integer' name='[is_holiday_prev_2]' role='measure' type='quantitative' />
            <column caption='Net Sales' datatype='real' name='[net_sales]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1455084918394060805]' derivation='None' name='[none:Calculation_1455084918394060805:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1455084918394679303]' derivation='Sum' name='[sum:Calculation_1455084918394679303:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[none:Calculation_1455084918394060805:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_1455084918394060805:nk]' />
              <groupfilter function='member' level='[none:Calculation_1455084918394060805:nk]' member='&quot;Regular Day&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[none:Calculation_1455084918394060805:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Two Days Before&quot;</bucket>
              <bucket>&quot;Day Before&quot;</bucket>
              <bucket>&quot;Holiday&quot;</bucket>
              <bucket>&quot;Day After&quot;</bucket>
              <bucket>&quot;Two Days After&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[none:Calculation_1455084918394060805:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[sum:Calculation_1455084918394679303:qk]' scope='rows' value='Average Net Sales' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='cell-w' value='18' />
            <format attr='cell-h' value='6' />
            <format attr='cell' value='6' />
            <format attr='cell-q' value='30' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#edc948' />
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[sum:Calculation_1455084918394679303:qk]</rows>
        <cols>[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[none:Calculation_1455084918394060805:nk]</cols>
      </table>
      <simple-id uuid='{31F2287A-1EF7-4755-8FBF-2EBF269099F9}' />
    </worksheet>
    <worksheet name='Payments'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='10'>Customer Payment Methods</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='veronicas_cleaned_df' name='federated.1b0nxao0z3w9sk1epa4qr1bhw27c' />
          </datasources>
          <datasource-dependencies datasource='federated.1b0nxao0z3w9sk1epa4qr1bhw27c'>
            <column caption='Card Sales Percentage' datatype='real' datatype-customized='true' default-format='p0.0%' name='[Calculation_1003387949334269954]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([card]) / (SUM([card]) + SUM([cash]) + SUM([gift_card]))' />
            </column>
            <column caption='Cash Sales Percentage' datatype='real' default-format='p0.0%' name='[Calculation_1003387949334462467]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([cash]) / (SUM([card]) + SUM([cash]) + SUM([gift_card]))' />
            </column>
            <column caption='Gift Card Sales Percentage' datatype='real' default-format='p0.0%' name='[Calculation_1003387949334532100]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([gift_card]) / (SUM([card]) + SUM([cash]) + SUM([gift_card]))' />
            </column>
            <column caption='Card' datatype='real' name='[card]' role='measure' type='quantitative' />
            <column caption='Cash' datatype='real' name='[cash]' role='measure' type='quantitative' />
            <column caption='Gift Card' datatype='real' name='[gift_card]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1003387949334269954]' derivation='User' name='[usr:Calculation_1003387949334269954:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1003387949334462467]' derivation='User' name='[usr:Calculation_1003387949334462467:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1003387949334532100]' derivation='User' name='[usr:Calculation_1003387949334532100:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[:Measure Names]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[usr:Calculation_1003387949334269954:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[usr:Calculation_1003387949334462467:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[usr:Calculation_1003387949334532100:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='336' />
            <format attr='cell-h' value='336' />
            <format attr='cell' value='42' />
            <format attr='cell-q' value='210' />
            <format attr='width' value='821' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[:Measure Names]' />
              <size column='[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[Multiple Values]' />
              <text column='[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[:Measure Names]' />
              <text column='[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[Multiple Values]' />
              <lod column='[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='wrap' value='on' />
                <format attr='vertical-align' value='auto' />
                <format attr='text-align' value='auto' />
                <format attr='text-orientation' value='0' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='0.86756908893585205' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-range-scope' value='table' />
                <format attr='mark-color' value='#e6130c' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#ffffff' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <mark-labels>
          <mark-label id='0' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[:Measure Names]</field>
                  <field>[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[usr:Calculation_1003387949334462467:qk]&quot;</value>
                <value>0.082614769038119262</value>
              </tuple>
            </tuple-reference>
            <label-position x='-16' y='19' />
          </mark-label>
          <mark-label id='1'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[:Measure Names]</field>
                  <field>[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[usr:Calculation_1003387949334532100:qk]&quot;</value>
                <value>0.0037258945236820417</value>
              </tuple>
            </tuple-reference>
            <label-position x='17' y='23' />
          </mark-label>
        </mark-labels>
      </table>
      <simple-id uuid='{706980E6-267A-4BC0-B490-C2D7F4A02E45}' />
    </worksheet>
    <worksheet name='Precipitation'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Precipitation Impact on Sales</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='veronicas_cleaned_df' name='federated.1b0nxao0z3w9sk1epa4qr1bhw27c' />
          </datasources>
          <datasource-dependencies datasource='federated.1b0nxao0z3w9sk1epa4qr1bhw27c'>
            <column caption='Net Sales' datatype='real' name='[net_sales]' role='measure' type='quantitative' />
            <column-instance column='[season]' derivation='None' name='[none:season:nk]' pivot='key' type='nominal' />
            <column caption='Season' datatype='string' name='[season]' role='dimension' type='nominal' />
            <column-instance column='[net_sales]' derivation='Sum' name='[sum:net_sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_precip_mm]' derivation='Sum' name='[sum:total_precip_mm:qk]' pivot='key' type='quantitative' />
            <column caption='Total Precip Mm' datatype='real' name='[total_precip_mm]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[sum:net_sales:qk]' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[none:season:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[sum:net_sales:qk]</rows>
        <cols>[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[sum:total_precip_mm:qk]</cols>
      </table>
      <simple-id uuid='{2E8886A4-52C4-4AD1-A881-6AB9918A539C}' />
    </worksheet>
    <worksheet name='Rainfall'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='10'>Rainfall Impact on Sales</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='veronicas_cleaned_df' name='federated.1b0nxao0z3w9sk1epa4qr1bhw27c' />
          </datasources>
          <datasource-dependencies datasource='federated.1b0nxao0z3w9sk1epa4qr1bhw27c'>
            <column caption='Net Sales' datatype='real' name='[net_sales]' role='measure' type='quantitative' />
            <column-instance column='[net_sales]' derivation='Sum' name='[sum:net_sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_rain_mm]' derivation='Sum' name='[sum:total_rain_mm:qk]' pivot='key' type='quantitative' />
            <column caption='Total Rain Mm' datatype='real' name='[total_rain_mm]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[sum:total_rain_mm:qk]' scope='cols' value='Total Rain (mm)' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#edc948' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[sum:net_sales:qk]</rows>
        <cols>[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[sum:total_rain_mm:qk]</cols>
      </table>
      <simple-id uuid='{F56409A0-C815-4687-8A79-59779C44323A}' />
    </worksheet>
    <worksheet name='Sales/Day'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='10'>Average Sales by Day of the Week</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='veronicas_cleaned_df' name='federated.1b0nxao0z3w9sk1epa4qr1bhw27c' />
          </datasources>
          <datasource-dependencies datasource='federated.1b0nxao0z3w9sk1epa4qr1bhw27c'>
            <column-instance column='[net_sales]' derivation='Avg' name='[avg:net_sales:qk]' pivot='key' type='quantitative' />
            <column caption='Day' datatype='string' name='[day]' role='dimension' type='nominal' />
            <column caption='Net Sales' datatype='real' name='[net_sales]' role='measure' type='quantitative' />
            <column-instance column='[day]' derivation='None' name='[none:day:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <manual-sort column='[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[none:day:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Monday&quot;</bucket>
              <bucket>&quot;Tuesday&quot;</bucket>
              <bucket>&quot;Wednesday&quot;</bucket>
              <bucket>&quot;Thursday&quot;</bucket>
              <bucket>&quot;Friday&quot;</bucket>
              <bucket>&quot;Saturday&quot;</bucket>
              <bucket>&quot;Sunday&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[none:day:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#edc948' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#e6130c' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[avg:net_sales:qk]</rows>
        <cols>[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[none:day:nk]</cols>
      </table>
      <simple-id uuid='{E255FC79-4BFD-4E88-88B7-ADC9DFFA6971}' />
    </worksheet>
    <worksheet name='Sales/Month+Tips'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='10'>Average Sales per Month with Average Tips (6.75%)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='veronicas_cleaned_df' name='federated.1b0nxao0z3w9sk1epa4qr1bhw27c' />
          </datasources>
          <datasource-dependencies datasource='federated.1b0nxao0z3w9sk1epa4qr1bhw27c'>
            <column caption='Month' datatype='string' name='[Calculation_1003387949331865601]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='DATENAME(&apos;month&apos;, [date])' />
            </column>
            <column-instance column='[net_sales]' derivation='Avg' name='[avg:net_sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[tip]' derivation='Avg' name='[avg:tip:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Net Sales' datatype='real' name='[net_sales]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1003387949331865601]' derivation='None' name='[none:Calculation_1003387949331865601:nk]' pivot='key' type='nominal' />
            <column caption='Tip' datatype='real' name='[tip]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[avg:tip:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[none:Calculation_1003387949331865601:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#edc948' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#e6130c' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[avg:net_sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[none:Calculation_1003387949331865601:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#edc948' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#e6130c' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[avg:tip:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[none:Calculation_1003387949331865601:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#e6130c' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#e6130c' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[avg:net_sales:qk] + [federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[avg:tip:qk])</rows>
        <cols>[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[none:Calculation_1003387949331865601:nk]</cols>
      </table>
      <simple-id uuid='{3C8014B8-E245-46A0-B34C-0DA611878F7D}' />
    </worksheet>
    <worksheet name='SalesM0M'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Sales Growth Rate (Month-over-Month)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='veronicas_cleaned_df' name='federated.1b0nxao0z3w9sk1epa4qr1bhw27c' />
          </datasources>
          <datasource-dependencies datasource='federated.1b0nxao0z3w9sk1epa4qr1bhw27c'>
            <column caption='Year-Month' datatype='string' name='[Calculation_1184657834401181697]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='STR(YEAR([date])) + &quot;-&quot; + RIGHT(&quot;0&quot; + STR(MONTH([date])), 2)' />
            </column>
            <column caption='MoM Growth Rate' datatype='real' default-format='p0.00%' name='[Calculation_1184657834401345538]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF ISNULL(LOOKUP(SUM([net_sales]), -1)) THEN&#10;    0&#10;ELSE&#10;    (SUM([net_sales]) - LOOKUP(SUM([net_sales]), -1)) / LOOKUP(SUM([net_sales]), -1)&#10;END'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Net Sales' datatype='real' name='[net_sales]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1184657834401181697]' derivation='None' name='[none:Calculation_1184657834401181697:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1184657834401345538]' derivation='User' name='[usr:Calculation_1184657834401345538:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[usr:Calculation_1184657834401345538:qk]' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[usr:Calculation_1184657834401345538:qk]' value='false' />
            <format attr='break-on-special' field='[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[usr:Calculation_1184657834401345538:qk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[usr:Calculation_1184657834401345538:qk]' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[usr:Calculation_1184657834401345538:qk]' value='MoM Growth Rate'>
              <formatted-text>
                <run>MoM Growth Rate</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[usr:Calculation_1184657834401345538:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[usr:Calculation_1184657834401345538:qk]</rows>
        <cols>[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[none:Calculation_1184657834401181697:nk]</cols>
      </table>
      <simple-id uuid='{95E93674-293D-49B9-A247-9F96E2E79AC4}' />
    </worksheet>
    <worksheet name='Season'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='10'>Average Sales by Season</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='veronicas_cleaned_df' name='federated.1b0nxao0z3w9sk1epa4qr1bhw27c' />
          </datasources>
          <datasource-dependencies datasource='federated.1b0nxao0z3w9sk1epa4qr1bhw27c'>
            <column-instance column='[net_sales]' derivation='Avg' name='[avg:net_sales:qk]' pivot='key' type='quantitative' />
            <column caption='Net Sales' datatype='real' name='[net_sales]' role='measure' type='quantitative' />
            <column-instance column='[season]' derivation='None' name='[none:season:nk]' pivot='key' type='nominal' />
            <column caption='Season' datatype='string' name='[season]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[none:season:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#edc948' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#e6130c' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[avg:net_sales:qk]</rows>
        <cols>[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[none:season:nk]</cols>
      </table>
      <simple-id uuid='{121A392A-511E-49C3-9F7F-6D22A1448413}' />
    </worksheet>
    <worksheet name='Snowfall'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='10'>Snowfall Impact on Sales</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='veronicas_cleaned_df' name='federated.1b0nxao0z3w9sk1epa4qr1bhw27c' />
          </datasources>
          <datasource-dependencies datasource='federated.1b0nxao0z3w9sk1epa4qr1bhw27c'>
            <column caption='Net Sales' datatype='real' name='[net_sales]' role='measure' type='quantitative' />
            <column-instance column='[season]' derivation='None' name='[none:season:nk]' pivot='key' type='nominal' />
            <column caption='Season' datatype='string' name='[season]' role='dimension' type='nominal' />
            <column-instance column='[net_sales]' derivation='Sum' name='[sum:net_sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_snow_mm]' derivation='Sum' name='[sum:total_snow_mm:qk]' pivot='key' type='quantitative' />
            <column caption='Total Snow Mm' datatype='real' name='[total_snow_mm]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[none:season:nk]'>
            <groupfilter function='member' level='[none:season:nk]' member='&quot;Winter&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[none:season:nk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[sum:total_snow_mm:qk]' scope='cols' value='Total Snow (mm)' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#a30009' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[sum:net_sales:qk]</rows>
        <cols>[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[sum:total_snow_mm:qk]</cols>
      </table>
      <simple-id uuid='{63E7D7E2-A1D5-43E6-AD59-CE835484DBC3}' />
    </worksheet>
    <worksheet name='Temperature'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Average Sales by Temperature</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='veronicas_cleaned_df' name='federated.1b0nxao0z3w9sk1epa4qr1bhw27c' />
          </datasources>
          <datasource-dependencies datasource='federated.1b0nxao0z3w9sk1epa4qr1bhw27c'>
            <column-instance column='[net_sales]' derivation='Avg' name='[avg:net_sales:qk]' pivot='key' type='quantitative' />
            <column caption='Net Sales' datatype='real' name='[net_sales]' role='measure' type='quantitative' />
            <column-instance column='[temp_category]' derivation='None' name='[none:temp_category:nk]' pivot='key' type='nominal' />
            <column caption='Temp Category' datatype='string' name='[temp_category]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Cold&quot;' value='Cold (&lt;=5c)' />
                <alias key='&quot;Comfortable&quot;' value='Comfortable (15-25c)' />
                <alias key='&quot;Cool&quot;' value='Cool (6-14c)' />
                <alias key='&quot;Hot&quot;' value='Hot (&gt;25c)' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[none:temp_category:nk]'>
            <groupfilter function='level-members' level='[none:temp_category:nk]' />
          </filter>
          <manual-sort column='[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[none:temp_category:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Cold&quot;</bucket>
              <bucket>&quot;Cool&quot;</bucket>
              <bucket>&quot;Comfortable&quot;</bucket>
              <bucket>&quot;Hot&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[none:temp_category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[none:temp_category:nk]' />
              <text column='[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[none:temp_category:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#edc948' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#e6130c' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[avg:net_sales:qk]</rows>
        <cols>[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[none:temp_category:nk]</cols>
      </table>
      <simple-id uuid='{19C250E0-28CF-4738-91A7-3DBFCB2A3E38}' />
    </worksheet>
    <worksheet name='TemperaturePercentage'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='11'>#3: Temperature Impact on Sales Percentage</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='temperature_impact_sales_percentage' name='federated.1h8b6x8008pmm214m1llr0u1ezik' />
          </datasources>
          <datasource-dependencies datasource='federated.1h8b6x8008pmm214m1llr0u1ezik'>
            <column datatype='real' name='[Percentage of Total Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Temperature Category]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;Cold&quot;' value='Cold (&lt;=5c)' />
                <alias key='&quot;Comfortable&quot;' value='Comfortable (15-25c)' />
                <alias key='&quot;Cool&quot;' value='Cool (6-14c)' />
                <alias key='&quot;Hot&quot;' value='Hot (&gt;25c)' />
              </aliases>
            </column>
            <column-instance column='[Temperature Category]' derivation='None' name='[none:Temperature Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Percentage of Total Sales]' derivation='Sum' name='[sum:Percentage of Total Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1h8b6x8008pmm214m1llr0u1ezik].[sum:Percentage of Total Sales:qk]' scope='rows' value='Percentage of Total Sales (%)' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1h8b6x8008pmm214m1llr0u1ezik].[none:Temperature Category:nk]' />
              <text column='[federated.1h8b6x8008pmm214m1llr0u1ezik].[none:Temperature Category:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1h8b6x8008pmm214m1llr0u1ezik].[sum:Percentage of Total Sales:qk]</rows>
        <cols>[federated.1h8b6x8008pmm214m1llr0u1ezik].[none:Temperature Category:nk]</cols>
      </table>
      <simple-id uuid='{849F85D2-9CA0-4A13-80B1-F4785883B4C0}' />
    </worksheet>
    <worksheet name='TopHolidays'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='11'>Top Performing Holidays</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='veronicas_cleaned_df' name='federated.1b0nxao0z3w9sk1epa4qr1bhw27c' />
          </datasources>
          <datasource-dependencies datasource='federated.1b0nxao0z3w9sk1epa4qr1bhw27c'>
            <column-instance column='[net_sales]' derivation='Avg' name='[avg:net_sales:qk]' pivot='key' type='quantitative' />
            <column caption='Holiday Name' datatype='string' name='[holiday_name]' role='dimension' type='nominal' />
            <column caption='Net Sales' datatype='real' name='[net_sales]' role='measure' type='quantitative' />
            <column-instance column='[holiday_name]' derivation='None' name='[none:holiday_name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[none:holiday_name:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:holiday_name:nk]' />
              <groupfilter function='member' level='[none:holiday_name:nk]' member='&quot;Regular Day&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[none:holiday_name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Good Friday&quot;</bucket>
              <bucket>&quot;Boxing Day&quot;</bucket>
              <bucket>&quot;Canada Day&quot;</bucket>
              <bucket>&quot;New Year&apos;s Day&quot;</bucket>
              <bucket>&quot;Family Day&quot;</bucket>
              <bucket>&quot;Victoria Day&quot;</bucket>
              <bucket>&quot;Thanksgiving Day&quot;</bucket>
              <bucket>&quot;Christmas Day&quot;</bucket>
              <bucket>&quot;Labour Day&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[none:holiday_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[none:holiday_name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[avg:net_sales:qk]</rows>
        <cols>[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[none:holiday_name:nk]</cols>
      </table>
      <simple-id uuid='{86CEC4E2-007C-43DF-B4D8-468DF858A19D}' />
    </worksheet>
    <worksheet name='WeeklySales'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='10'>Weekly Sales Trend</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='veronicas_cleaned_df' name='federated.1b0nxao0z3w9sk1epa4qr1bhw27c' />
          </datasources>
          <datasource-dependencies datasource='federated.1b0nxao0z3w9sk1epa4qr1bhw27c'>
            <column caption='Year-Week' datatype='string' name='[Calculation_1455084918396940296]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='STR(YEAR([date])) + &apos;-&apos; + RIGHT(&apos;0&apos; + STR(DATEPART(&apos;week&apos;, [date])), 2)' />
            </column>
            <column caption='Weekly Avg Net Sales' datatype='real' name='[Calculation_1455084918397009929]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{FIXED [Calculation_1455084918396940296]: AVG([net_sales])}' />
            </column>
            <column-instance column='[Calculation_1455084918397009929]' derivation='Avg' name='[avg:Calculation_1455084918397009929:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Net Sales' datatype='real' name='[net_sales]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1455084918396940296]' derivation='None' name='[none:Calculation_1455084918396940296:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='18' />
            <format attr='cell-h' value='6' />
            <format attr='cell' value='6' />
            <format attr='cell-q' value='30' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[none:Calculation_1455084918396940296:nk]' value='-90' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#edc948' />
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[avg:Calculation_1455084918397009929:qk]</rows>
        <cols>[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[none:Calculation_1455084918396940296:nk]</cols>
      </table>
      <simple-id uuid='{6F60F5CD-7276-476E-80B5-8794F634CBA0}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Customer Behaviour'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' underline='true'>Sales Insights</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='900' maxwidth='1600' minheight='900' minwidth='1600' preset-index='8' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98222' id='28' param='horz' type-v2='layout-flow' w='99000' x='500' y='889'>
            <zone h='98222' id='18' type-v2='layout-basic' w='99000' x='500' y='889'>
              <zone h='32351' id='15' param='vert' type-v2='layout-flow' w='99000' x='500' y='889'>
                <zone fixed-size='49' h='6333' id='16' is-fixed='true' type-v2='title' w='99000' x='500' y='889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='26018' id='7' param='horz' type-v2='layout-flow' w='99000' x='500' y='7222'>
                  <zone h='26018' id='5' type-v2='layout-basic' w='99000' x='500' y='7222'>
                    <zone h='26018' id='3' name='Sales/Day' w='61870' x='500' y='7222'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='26018' id='12' name='Season' w='37130' x='62370' y='7222'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                </zone>
              </zone>
              <zone h='32936' id='9' name='WeeklySales' w='49500' x='500' y='33240'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='65871' id='10' name='Sales/Month+Tips' w='24750' x='50000' y='33240'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='32936' id='17' name='Payments' w='24750' x='74750' y='33240'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='32935' id='21' name='GC' w='49500' x='500' y='66176'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='32935' id='26' name='Discounts' w='24750' x='74750' y='66176'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' underline='true'>Sales Insights</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='2000' minheight='2000' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='34' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98222' id='33' param='vert' type-v2='layout-flow' w='99000' x='500' y='889'>
                <zone fixed-size='49' h='6333' id='16' type-v2='title' w='99000' x='500' y='889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='226' h='26018' id='3' is-fixed='true' name='Sales/Day' w='61870' x='500' y='7222'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='226' h='26018' id='12' is-fixed='true' name='Season' w='37130' x='62370' y='7222'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='32936' id='9' is-fixed='true' name='WeeklySales' w='49500' x='500' y='33240'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='65871' id='10' is-fixed='true' name='Sales/Month+Tips' w='24750' x='50000' y='33240'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='32936' id='17' is-fixed='true' name='Payments' w='24750' x='74750' y='33240'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='32935' id='21' is-fixed='true' name='GC' w='49500' x='500' y='66176'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='32935' id='26' is-fixed='true' name='Discounts' w='24750' x='74750' y='66176'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{A8F225EA-1952-4766-A3B4-1C298C8358CF}' />
    </dashboard>
    <dashboard enable-sort-zone-taborder='true' name='KPI'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' underline='true'>Key Performance Indicators</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='900' maxwidth='1600' minheight='900' minwidth='1600' preset-index='8' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98222' id='15' param='vert' type-v2='layout-flow' w='99000' x='500' y='889'>
            <zone h='4556' id='16' type-v2='title' w='99000' x='500' y='889'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='93666' id='7' param='horz' type-v2='layout-flow' w='99000' x='500' y='5445'>
              <zone h='93666' id='5' type-v2='layout-basic' w='99000' x='500' y='5445'>
                <zone h='46832' id='3' name='HolidayPercentage' w='24750' x='25250' y='5445'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='46834' id='9' name='SalesM0M' w='99000' x='500' y='52277'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='46832' id='11' name='TemperaturePercentage' w='49500' x='50000' y='5445'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='46832' id='13' type-v2='text' w='24750' x='500' y='5445'>
                  <formatted-text>
                    <run fontcolor='#000000' fontsize='15'>#1: Average Sales Per Day = </run>
                    <run bold='true' fontcolor='#000000' fontsize='15'>$3125.42</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000' fontsize='15'>(Net Profit Margin: </run>
                    <run bold='true' fontcolor='#000000' fontsize='15'>15%</run>
                    <run fontcolor='#000000' fontsize='15'>)</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' underline='true'>Key Performance Indicators</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1000' minheight='1000' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='22' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98222' id='21' param='vert' type-v2='layout-flow' w='99000' x='500' y='889'>
                <zone h='4556' id='16' type-v2='title' w='99000' x='500' y='889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='46832' id='13' type-v2='text' w='24750' x='500' y='5445'>
                  <formatted-text>
                    <run fontcolor='#000000' fontsize='15'>#1: Average Sales Per Day = </run>
                    <run bold='true' fontcolor='#000000' fontsize='15'>$3125.42</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000' fontsize='15'>(Net Profit Margin: </run>
                    <run bold='true' fontcolor='#000000' fontsize='15'>15%</run>
                    <run fontcolor='#000000' fontsize='15'>)</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46832' id='3' is-fixed='true' name='HolidayPercentage' w='24750' x='25250' y='5445'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46832' id='11' is-fixed='true' name='TemperaturePercentage' w='49500' x='50000' y='5445'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46834' id='9' is-fixed='true' name='SalesM0M' w='99000' x='500' y='52277'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{B45D8357-7BA4-4024-9F88-BE899F030E4D}' />
    </dashboard>
    <dashboard name='Story 1' type='storyboard'>
      <style />
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98340' id='1' param='vert' removable='false' type-v2='layout-flow' w='98426' x='787' y='830'>
            <zone h='3423' id='3' type-v2='title' w='98426' x='787' y='830' />
            <zone h='10477' id='4' is-fixed='true' paired-zone-id='5' removable='false' type-v2='flipboard-nav' w='98426' x='787' y='4253' />
            <zone h='84440' id='5' paired-zone-id='4' removable='false' type-v2='flipboard' w='98426' x='787' y='14730'>
              <flipboard active-id='1' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point captured-sheet='' id='1' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{53A78944-AC83-4439-8731-E4D932407489}' />
    </dashboard>
    <dashboard enable-sort-zone-taborder='true' name='Trends'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' underline='true'>Holiday and Weather Condition Patterns</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='900' maxwidth='1600' minheight='900' minwidth='1600' preset-index='8' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98222' id='18' param='vert' type-v2='layout-flow' w='99000' x='500' y='889'>
            <zone h='4556' id='19' type-v2='title' w='99000' x='500' y='889'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='93666' id='15' param='horz' type-v2='layout-flow' w='99000' x='500' y='5445'>
              <zone h='93666' id='7' param='horz' type-v2='layout-flow' w='50625' x='500' y='5445'>
                <zone h='93666' id='5' type-v2='layout-basic' w='50625' x='500' y='5445'>
                  <zone h='46832' id='9' name='TopHolidays' w='50625' x='500' y='5445'>
                    <layout-cache cell-count-w='9' minheight='203' non-cell-size-w='52' type-h='scalable' type-w='cell' />
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='46834' id='11' name='HolidayTiming' w='50625' x='500' y='52277'>
                    <layout-cache cell-count-w='5' minheight='127' non-cell-size-w='52' type-h='scalable' type-w='cell' />
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
              <zone fixed-size='774' h='93666' id='14' is-fixed='true' param='vert' type-v2='layout-flow' w='48375' x='51125' y='5445'>
                <zone h='46833' id='16' name='Rainfall' w='48375' x='51125' y='5445'>
                  <layout-cache minheight='188' minwidth='159' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='46833' id='12' name='Snowfall' w='48375' x='51125' y='52278'>
                  <layout-cache minheight='188' minwidth='159' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' underline='true'>Holiday and Weather Condition Patterns</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1250' minheight='1250' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='25' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98222' id='24' param='vert' type-v2='layout-flow' w='99000' x='500' y='889'>
                <zone h='4556' id='19' type-v2='title' w='99000' x='500' y='889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46832' id='9' is-fixed='true' name='TopHolidays' w='50625' x='500' y='5445'>
                  <layout-cache cell-count-w='9' minheight='203' non-cell-size-w='52' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46833' id='16' is-fixed='true' name='Rainfall' w='48375' x='51125' y='5445'>
                  <layout-cache minheight='188' minwidth='159' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46834' id='11' is-fixed='true' name='HolidayTiming' w='50625' x='500' y='52277'>
                  <layout-cache cell-count-w='5' minheight='127' non-cell-size-w='52' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46833' id='12' is-fixed='true' name='Snowfall' w='48375' x='51125' y='52278'>
                  <layout-cache minheight='188' minwidth='159' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{8BD7C8D2-FD54-40F5-8561-A094107F222C}' />
    </dashboard>
  </dashboards>
  <windows source-height='72'>
    <window class='worksheet' name='Sales/Day'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[none:day:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{7CA0A749-6A2A-444B-A966-87A8AE4442F6}' />
    </window>
    <window class='worksheet' name='WeeklySales'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{6507AB2A-1612-46AA-8833-5BD8DA7C9849}' />
    </window>
    <window class='worksheet' name='Sales/Month+Tips'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[none:Calculation_1003387949331865601:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{4B8C05CA-148B-4FCB-A9EA-0CDCF2D5F106}' />
    </window>
    <window class='worksheet' name='Season'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[none:season:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{9D3C8A4B-AF47-4E1C-82F5-5179C2F8D2D7}' />
    </window>
    <window class='worksheet' name='Payments'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[:Measure Names]' show-morefewerbutton='false' type='filter' />
            <card pane-specification-id='0' param='[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[Multiple Values]' type='size' />
            <card pane-specification-id='0' param='[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[:Measure Names]'>
          <bucket-selection />
        </highlight>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{5E5B5E94-61AD-4653-9715-DAB021FC3228}' />
    </window>
    <window class='worksheet' name='GC'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[none:Calculation_1003387949331865601:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{47FBD271-17B6-425A-BC45-ECA7129943E5}' />
    </window>
    <window class='worksheet' name='Holiday'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[none:is_holiday:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{84E4C143-8630-44BE-BD1E-4668379AAF9A}' />
    </window>
    <window class='worksheet' name='Temperature'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[none:temp_category:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[none:temp_category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{4806FDF8-A23C-45F2-AF6D-5FEC11F3E3B6}' />
    </window>
    <window class='worksheet' name='SalesM0M'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[usr:Calculation_1184657834401345538:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{D5B4DD2E-C54D-4842-8CED-6A231232B345}' />
    </window>
    <window class='worksheet' name='TopHolidays'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[none:holiday_name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{5466174D-ACE3-4B53-A08A-122E1B05D7FE}' />
    </window>
    <window class='worksheet' name='Precipitation'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[none:season:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{D8056DB6-657E-4C2A-9CC3-90ECA5EA807E}' />
    </window>
    <window class='worksheet' name='Snowfall'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{7B7BF668-36F1-4C8B-819E-FC22258D2DCD}' />
    </window>
    <window class='worksheet' name='HolidayTiming'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{BB1CFB4F-6718-43BC-8E80-2983F3BEA5DA}' />
    </window>
    <window class='worksheet' name='Discounts'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1b0nxao0z3w9sk1epa4qr1bhw27c].[none:Calculation_1003387949331865601:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{4303895F-9354-4684-89CA-36A4FCD3E5C6}' />
    </window>
    <window class='worksheet' name='HolidayPercentage'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.007ui6i10h7seg1c3163c0wqbctc].[none:Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{5028E2AC-60D6-4F6D-BA13-9CCBD05617C5}' />
    </window>
    <window class='worksheet' name='TemperaturePercentage'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1h8b6x8008pmm214m1llr0u1ezik].[none:Temperature Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{2DC0FF23-3520-48C1-A061-0533F71668BA}' />
    </window>
    <window class='worksheet' name='Rainfall'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{D4578001-04C7-488C-A3FA-567A6491CBD4}' />
    </window>
    <window class='dashboard' maximized='true' name='Customer Behaviour'>
      <viewpoints>
        <viewpoint name='Discounts'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='GC'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Payments'>
          <floating-toolbar-visibility value='2' />
          <default-map-tool-selection tool='4' />
        </viewpoint>
        <viewpoint name='Sales/Day'>
          <zoom type='entire-view' />
          <floating-toolbar-visibility value='1' />
        </viewpoint>
        <viewpoint name='Sales/Month+Tips'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Season'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='WeeklySales'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='16' />
      <simple-id uuid='{43CF2D0D-C1E3-4280-B15E-33B2B6354D10}' />
    </window>
    <window class='dashboard' name='Trends'>
      <viewpoints>
        <viewpoint name='HolidayTiming'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Rainfall'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Snowfall'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='TopHolidays'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='19' />
      <simple-id uuid='{D43ADC15-9E00-4D84-BF96-9E8F071A6D82}' />
    </window>
    <window class='dashboard' name='KPI'>
      <viewpoints>
        <viewpoint name='HolidayPercentage'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='SalesM0M'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='TemperaturePercentage'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{4EFF2CFE-7FE3-4173-A3BF-9BAAB5C6DC37}' />
    </window>
    <window class='dashboard' name='Story 1'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{A58526C0-7D60-4615-89AF-9935DAC351DF}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Customer Behaviour' width='384'>
      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
      ioqK2LNnDzt27KClpYX5+fkVz8eBAwcA2LFjB/n5+Vl/H+mneavVSktLC1arNetTrd/vp7y8
      nI6ODurq6rjvvvuYnp7Omkc8Hmfnzp1UV1dz4cKFrHHwyRN9KBSio6MDt9udNWcj1yzAW2+9
      RV9fn37drnQ/yNU1C6n7x4EDB2hra6Ojo2PFVhKTycShQ4eIxWLs3Lkz6+/O/L3vfe97K2Z4
      BxUVFdHZ2cn8/Dw+n48dO3ZkLRULCgro7OxkZGSE1tZWVFWltLQ04wVTUFDA5OQklZWVFBUV
      0dPTQ1NTU9a9jKPRKP39/ZSVlZGXl0csFqOkpCRjbGFhIV1dXZSVlek3pubm5oxPsXa7Hbfb
      zdatW6msrMTtdpOXl5c1j/z8fKqrq+np6UFV1YxP3dfmbLVa8Xg81NXVUVlZiclkypiH2+3m
      o48+YmxsjCtXrlBZWUlpaWnG49psNpaWlqipqaGkpIRAIKB/jkyfLx6PMzg4iM/nIxaL0dzc
      nPUmZjabOX/+PIuLi2zatIlkMklxcXHGpzaHw8HCwgLFxcVUVFRw8eJFiouLKSgoyHjc6elp
      vF4v1dXVxGIx3G43LpcrYx4Wi4Xz589TXl5Of38/TqeT6urqjOfOYrFQUlJCVVUVdXV1FBcX
      Y7VaMx7bSGz6M1ZXVzMxMcHU1BSbNm3KGAefNG0VFRVRUVFBbW2t/sSe6bhzc3P09/czPj7O
      0tISzc3NWX936d/Nhg0bsNlszMzMZD0fBQUF9Pf3Mzs7y9TUlP45s32+sbExhoaGqKiowO12
      Y7fbs54Pq9VKNBqlurqaUCiE1+tlw4YNGX8fmqbptc6ysjL8fj+VlZUZczZyzUKqZup2u2lo
      aKCyshJVVSkqKsoYm6trFlLXYk9PDxMTE4yOjtLW1obD4cgYGw6HKSkpoaamBkVR8Pv9VFRU
      XBd3VzqBs7FarVgsFgoLC7HZbFk/HKQurtraWiYnJ7l48SINDQ1Zq3Amk4ktW7YAqS9/7969
      WU8ypJ6srr347HZ71liz2czhw4f111NTU8RisYzv0TRNL7U3btyIxWJZcT/lqakpRkdHaW9v
      x2q1Mj4+nvUHVVZWRldXF0tLS2zcuJH5+Xn9PH6aoijY7XY2btzI5cuXV6wRmc1mNE1jeHgY
      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
    </thumbnail>
    <thumbnail height='384' name='Discounts' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOzdeXhU930v/vf3nDO7dqEFsUgCSYAQmwCzOgYDAcdO4jiO7SxOnTZ1nbZp
      mt6m26/3ub3Pve3vtre9bZq0+aXLbRY7ju3ExiYuELDBrAJbgEBoQxICCYTQPpoZzcxZvr8/
      ZCvGxjACzZyR5v16njyPI0bn+wFpvu8533PO9yOklBJERJRyFLsLICIiezAAiIhSFAOAiChF
      aXYXIKWEYRgAANM0IYSwuSIiotRgewAIIeBwOMb///v/m4iI4ifuASClRGNjI65du4bS0lLM
      nDkThw8fhsPhwPLly5GVlRXvEoiI6CbiHgCmaeLy5cv4+Mc/jj179kBRFBQXF6OioiLeQxMR
      0S3E7SLwe2v7Qgjouo6XXnoJXq8Xuq6joaEBu3fvRjgcjtfwRER0G3ELgHA4jMOHD6O7uxtu
      txuPPfYYRkdHUVZWhocffhiLFy9GfX19vIYnIqLbEPF+Etg0TezcuROFhYUYHBxEWVkZrl69
      Cr/fj7Vr16KwsHD8tbqu8yIwEVGCxD0AgLHloEgkArfbDQDjS0Oqqt7wOgYAEVHiJCQAYsUA
      ICJKHD4JTESUohgAREQpigFARJSiGABERCmKAUBElKIYAEREKYoBQESUohgAREQpigFARCnJ
      0nVIK2meg7WF7Q1hiIgSzdJ1tH7rTyFNE3O+/tvwVpTbXZIteAZARClntK0doaYmhBoa0fTM
      19H53e/BCATtLivh4h4AUko0NDTgzTffxMWLF2EYBg4dOoSamhok0TZERJRCQk3NsEbDKP/O
      3yNnxzZc/9kraPrq1zB84mRKzUtxD4D3OoJt2rQJjY2NqKurQ3l5ObKystDW1hbv4YmIPiRQ
      dxbueaXwFBej5I/+Cyq+/XeApuHCf/lTXPzLv0a0f8DuEhMibruBSilhmiaEEPjP//xPhEIh
      FBQUQNd1bNu2DcFgEHV1dVi3bh0MwwCA8dcTEcWLFQ6j5cu/joyNG1D09d8G3p1zpG7g2nPP
      o+/5l6Clp6Pot59Gxn33QqjTd6U8bheBw+EwampqUF5eDrfbjYceegh79uyBx+NBJBJBMBiE
      2+2GEOKGLaC5HTQRxVPgQitkJIzM6hVwvdujBADgcqHkt76Kgo9vRcfffhuX/udfI/ONg5jz
      9a/BUzzHvoLjKOEdwe655x4cPXoUlmVhx44d8Pl8469lPwAiiree51/A1X//Dyx+7odwFhTc
      9DWWrqPvP/ei85/+BdI0UfTUl1D4xKNQptn8ZEtHMF3XIYSApt14AsIAIKJ4u/AH34IViaDs
      b/8Gqsd9y9dGeq7j8rf/GYNvHYF3/nyU/PE34atcMG2WqhOyuCWEGJ/8gbFlng9O/kRE8WaM
      jGC0rR1pS6puO/kDgKsgH+V/9ReY/xd/BsPvR8Mz38Dl73wfRnB63DI6fa9uEBF9QKi5Bdbo
      KHyVlRP6vtxt92PxD7+PvIcewLUXXsa5L3wVQyfemfK3jDIAiChlBOrOQnE6kba0asLf68jM
      QOkf/z4Wffd/Q03zoen3/git//UvER0YjEOlicEAIKKUMfL22/AuqIDi8dzxMTJWLEPVD76H
      Wb/+JAaPHMfZL/4mru/aA2mak1hpYjAAiCgl6AODiHRfg7dyERSX666OpTgcmPNbX0HVv38X
      7tmz0PY//gaN3/gTjF7qnKRqJ58ViX5oyYpXYokoJQTOnoUZDCJj9apJO6Z3fimq/vXbuPby
      Llz+9vdR9+QzmPXlJzDrqc9DsfFGFyMQhL/+AvznW+Cvv4Ch2vMIdVzBquf+DjPu/dXfnwFA
      RCkheK4eWno63MVzJ/3YhY98EjkfW4/2v/5HdH7/Bxg4cASl3/o60pctjvsto0YgiJHzrWOT
      /fkWDJ06j9GOK3jvw76rYAbSqyow50ufRu6G6hu+NyHPAcSKzwEQUbw0/sbTcM0sRMl/+69x
      faCrb/9b6Pg//4xo/yAKP/cpzP3aV6C974HXu2FFoxhpaMXwmfPwn7+A4dMfmOzzc5G2uBxZ
      KxYjfXEFMqrK4ZqR85HH4xkAEU17o23tiF67hpxtW+L+NO+Mrfchc9UKdP7LD9H9wk70HziC
      +X/6+8hefw+EEvtlVysaxUhTGwINY5/sA+cvwN9wAXi3iY0zfwbSK8tR9MgOpC+uQPriW0/2
      N8MzACKa9gb2v4FL/+9fY8G/fA/e+fMTNq6/rh6tf/l/ELpwEXkPbEHpt34XzuysD73OiuoI
      NLci0HABIw3NGGm4gJH3TfZaZgYyli9G5rJKpFWWI31xxYQn+5thABDRtHf5f/0NAmfPouL7
      34OWnp7Qsa2ojq4fPI+uHzwP4XSg5OtPw1dWikDL2Kf7QOOvJnsJQMtMR/qicqQtqkDGuxO+
      e2ZBXK4lMACIaFqzdB2NTz4F38IFKP7zP4Ow6e6c4IV2tP3NdzD89hlAYmyyz8hA2qJypC0s
      R8bSscneFafJ/mZ4DYCIprVw+0WYIyNIX7vGtskfAHzl87D0X/8efQeOAtJC2sLETvY3wwAg
      omkt1NwCKxyGr3KR3aUAAGZs3mB3CeP4JDARTWsjtbVwlxTDkZtrdylJhwFARNOWOTqKYH09
      fIsX39X+P9NV3JeATNPEoUOHIKVEW1sbHn74Yezbtw9FRUVYvnw5srI+fEsUEdFkCLdfhDUa
      RtqypRO6Bz9VxD0AVFXF5s2b0dPTA5/Ph+vXr6O4uBjLly+/oR0kEdFkGzl9Bpahw7t4Yvv/
      p4q4BUAoFMLRo0exZMkSFBQU4NSpU9i6dSsikQicTif27NmDlStXori4GIZhABg7W7AsK14l
      EVGK8Z86DU9ZOSyPB5FIxO5ykk7cAsDr9WLbtm0AgKGhIXi9XjgcDgwPD2PevHlwOp0YGBhA
      SUnJDff+8zkAIpoMxsgIoh0dyP74VngyM+0uJykl5DZQv9+P1atXAxhrEH/gwAG4XC6sX78+
      EcMTUQoKNTTCDAUn3P4xlSQkAObO/dX2q3l5edi6dWsihiWiFBZsbITicsG3ZIndpSQtXhYn
      omlp5O134K0oh+rl7Z8fhQFARNNOtLcX0atX4V248K7bP05nDAAimnZCDY0wg0GkT2L7x+mI
      AUBE006wvh5qejrccye//eN0wgAgomknUHcWvspFUPiw6S0xAIhoWhltv4hoTze8iyvj3v5x
      qmMAENG0Eu4Y2/8nYxXX/2+HAUBE08rIqVNw5OfDkZ9vdylJjwFARNOGpesInDkDb3k5VK/X
      7nKSHgOAiKaN8MUOmH4/0u9ZbWv7x6mCAUBE08ZoSwus0TD3/4kRA4CIpo2R2lq4i9n+MVYM
      ACKaFqRpInT+PHyLK6Fw/T8mDAAimhbMQADWaAi+JUvY/jFG/Fciomkh0tUFS9fhXbzY7lKm
      DFsCQNd1mKZpx9BENE0Fz56Fp7wcWlaW3aVMGXG/T8o0TRw6dAhSSrS1teGTn/wkTp48CdM0
      sXXrVqSnp8e7BCKa5ixdR/D8efgWL4bq4f7/sYp7AKiqis2bN6Onpwc+nw8NDQ144IEH4Pf7
      0dzcjFV8XJuI7pLp92P0wgVkv9uHnGITtwAIhUI4evQolixZgoKCApw6dQpbt27FW2+9BU3T
      4HK5oOs6pJQwDAPA2NmCZVnxKomIpqlgeztMvx/OhQsRiUTsLmfKiFsAeL1ebHs3jYeGhuD1
      euFwOJCbm4uuri4MDQ2hoKAAQgg43rdjn4O79xHRBA2crRvb/z8rix3AJiAhF4H9fj9Wr14N
      AFiyZAna29sRCARQWlqaiOGJaBqzwmGEmpvhnFnIyX+CErJZxtz3deXRNA333XdfIoYlohRg
      vLv+P+ORR+wuZcrhcwBENKWF21qBaBS+hYvsLmXKYQAQ0ZQWrDsLNTMTnopyu0uZchgARDRl
      mYEAgufOwl1cDC2TD4BNFAOAiKYsMxhE+PJlpPN5ojvCACCiKStYfw5CCHgqKuwuZUpiABDR
      lCQtC4FTp8bu/y+dZ3c5UxIDgIimJDMYRLitDb6lS6GmpdldzpTEACCiKckYHET48mV4F7H9
      451iABDRlBSsq4PidsOzcKHdpUxZDAAimnKkaSJw+jQc2TnwzOP6/51iABDRlGMGg4hcvgzv
      4koILSE72kxLDAAimnKiV64geqULactX2F3KlMYAIKIpJ3i2DqovDe6y+XaXMqUxAIhoSrF0
      HaGGBjjy8+CeW2x3OVMaA4CIphRzxI/RCy3wLV1qdylTXkKunvT19aGurg55eXmoqKjA4cOH
      4XA4sHz5cmRlcQMnIopdtOsKDL8fvuXL7S5lyot7AJimibfffhvbt28HAHR2dqK4uBgV3LuD
      iO7ASO07UNPSuP3DJIhbAEgpx5u8X758GXv27EFaWhqKiorQ0NCAtrY2bN68GS6Xi03hiSgm
      MhpFqKkRWn4+ZFYWG8DfpbgFQDgcRk1NDRYsWIDy8nJs3rwZe/fuRVlZGcrKynD58mXU19dj
      1apVbApPRDHR/X6EW1sx49HH4GL/37sWtwDweDzYvHkzpJRobm7GkSNHYJommpqacPXqVfj9
      fqxduzZewxPRNDTa1gYZjcLD2z8nRdyvAQghsGnTJoyOjsLj8UAIgbKyMgghoKpqvIcnomkk
      eO4s1IwMeMp5DXEyJOQuICEEvF7vrwblo9tENEFmMIjguTq4y8qg8e7BScHnAIhoSnhv/5+0
      pcvsLmXaYAAQ0ZTgP3wIiqbBt4wBMFkYAESU9KRhYLSpEY7cXLhLSu0uZ9pgABBR0jMDAYy2
      XoC3aim3f55EDAAiSnqRrk7ovb3wVi6yu5RphQFAREkvVF8PNS0N3soqu0uZVhgARJTUrGgU
      oYZ6OPLy4CgosLucaYUBQERJbWz9vxW+pcsgFE5Zk4n/mkSU1MLtbbCCAXiXcP//ycYAIKKk
      FjpfD8Xng2c+9/+ZbAwAIkpaVjiMUMN5uGbNhiMv3+5yph0GABElLWN4COHWC/AtX2F3KdMS
      A4CIklakvR2wLPgWL7G7lGmJAUBESUlaFgKnT0H1+eAqKbG7nGkpIQEgpYRhGOPtHtn6kYhu
      xxodxWhLE7d/jqO4b6ohpURLSwu6u7uRk5ODkpIS1NTUQFEU3HvvvWzrRkQ3ZQwNIXKpA5mb
      f8PuUqatuJ8BmKaJ1tZWLFy4EBUVFTh37hzWrFmDBQsW4MKFC/EenoimqNHmRkBR4J5fZncp
      01bczgB0XUdHRwdmzJiBnp4eXLlyBadOnYLD4UBGRgZUVUVXV9f48hDApSEiepdlYaT2HahZ
      WVBmz0EkErG7omkprktAmqZBURTMmjUL1dXV2Lt3L9LS0jA4OIjh4WFkZmZCCAGHwzH+Pe//
      byJKTebICCJtrfBWLISH6/9xE7clIIfDgdLSUmRkZKCoqAgHDx5EZmYmqqqqcPLkSVy4cAFl
      ZTy1I6IPM4YGoV/rhm/ZcrtLmdbifhFYCIGqqioYhgFN0yCEwLZt2yCEgMKNnYjoJgLvvA3h
      cMBdVm53KdNaQlrrfHCZR1XVRAxLRFOQNAyMNjdBY/vHuONHcCJKKmYwiNHWFrZ/TAAGABEl
      leiVThi9vfAuqrS7lGmPAUBESSV0vh6qzwdv5WK7S5n2GABElDQsPYrQ+fPQZuTBUVBodznT
      HgOAiJKGFQgi3HoB3iVL2f4xAfgvTERJI3yxHVYgAN+SZXaXkhIYAESUNEYb6qH4vHCz/WNC
      MACIKClY4TBC5+vhZPvHhGEAEFFSMP1+jLZd4PYPCcQAIKKkEL7YDpgmvGz/mDAMACKynbQs
      BM/UQvH64OL2DwnDACAi21nhMEabm+Cez/aPicQAICLbmcNj7R99K6rtLiWlMACIyHajzY0Q
      QoFnPrd/TiQGABHZamz9/zS0rCy45vH+/0SK+16rUkocPXoUuq4jJycHpaWlOHDgADIzM7F8
      +XJkcb2PKKVZoSDCrS1wVyyA6vXaXU5KiXsAWJYFv9+PDRs2ICMjA62trSguLkZlZSWcTme8
      hyeiJGcMDUG/ehXZD33a7lJSTtwCQNd1dHR0oKCgAPn5+Th9+jSEEFiwYAGuX7+OPXv2YP36
      9cjNzYVhGAAA0zRhWVa8SiKiJDR8sgZwOKAWlyASidhdTkqJ6xmApmlQFAWLFi2Cx+PBrl27
      kJGRgXXr1qGrqwuXLl3CjBkzbmgX+f7/JqLpzQyMIHT8KFyzZyO9fAE7gCVY3P61HQ4HSktL
      YVkWDh8+DMuyMGfOHPT29qK1tRWmaWLdunXxGp6Ikpy0LPgPHUSkox0zv/4HnPxtIKSUMt6D
      SClhmia0d3/A7y3zKB/Y71vXdZ4BEKWIaPdVXP7zP4K7dD5m/cmfQ2h87ydaQiJXCDE++QMf
      nviJKLVIQ8fAKy9BhkeR+7nPc/K3CWdiIkq4UMN5+N86gMz7t8GzYKHd5aQsBgARJZQ5GkL/
      T38MLTsbOZ95zO5yUhoDgIgSRkqJkaOHEG5tQe5jX4CWk2N3SSmNAUBECWP09aL/xZ/As6gK
      6Rvvs7uclMcAIKKEkKaJwV2vQAaDmPGFL0PhTgC2YwAQUUKELzRjeN9uZNy/DZ4Fi+wuh8AA
      IKIEsMJh9D3/I6iZmcj+1GfsLofexQAgorgau/D7FsKN9cj59KNw5BXYXRK9i89eE32AlBLS
      3wej5RTgcMCx9D4IRbW7rCnLHBrEwCsvwr1gETI2b7W7HHofBgDRu6Rlwrp+Gfqp/dCbaiCH
      +gDTgFCdcCzZaHd5U5I0TQy9/iqsoSHkfu0bUNweu0ui92EAUMqToRGYXU2InvgFzM4mCKFC
      K6uG9tBmRH75A0T2/xjaglUQTrfdpU45kYttGN7zC6RtvA+eRYvtLoc+gAFAKcsa6IbRVAP9
      9H5YfVcgsgvhXPspaFUboeYXQ0oJSInRH/13RE/ugWvjw3aXPKVYkQgGXnoOSloacj77OJfR
      khADgFKKNHRYV1qgn3kDZuspyEgQyqwFcN/7OajzlkP4MiGEAPDuJoYVK6GWVyNy8KdwLPsY
      lHQ+uRoLKSUCJ48heKYWM578DV74TVLTJgCkNCEEP2HQzVkjA7Au1kE//UuYXS0Q7jSoC9bA
      sXQzlKL5ENrNH0oSQsC94ysI/NPvI/LWz+B56OkEVz41mcNDGHjxObhKy5C5dYfd5dBHSEhT
      +N7eXgSDQXg8HuTn5+PSpUtQVRVz5swZ/7R1V2NYBqJXX4SWsxGqd+4kVE3TgbRMyP4rMM4d
      hNF4DHKwB0reHDi3fgVaWTVEzsyYfv+UgmI4VtyP6IndcK75BNS82QmofuqSlgn/L1+H2d+L
      vK/+Ni/8JrGEBMDp06dRUVEBAGhtbYXf70c4HIbD4cDMmTMnYRQTZrAZlj4IT+nvTMLxaCqT
      kRCsriYYp/bAvHwe0jShFldB2/6bUGcvhHD7JnQ8IQTcW74Avf4ownv+A74n/2ucKp8eopcv
      YWj3a0hb/zF4lyyzuxy6hbgFgJRy/H+RSAR9fX0oKSlBZ2cnNm3ahEAggKamJhQWFo53CLMs
      a7xB/MQoEL7FsIaOwQj3AVrW5P5laEoQI32w2k/BOP1LyN5LkGm5UKo2Q6u6D0reXEBRYQLA
      nfyO+bLg2PgI9DeeQ7S5Fsp8Tmw3I3UdAz/7CYTDgczPPA7TkoB1J+9pSoQJB8B7HSRvd+oc
      Dodx7NgxLF68GJs2bcLIyAgOHTqE7OxsSClhWdYkdgYT0LLWIDpwEIb/HLSceyfpuJT0TANW
      TxvM+oOQbe9ABAchihbC8YnfBUqWAr7sSRvKueYBmKf3I/zGT+AtrgTYxepDQrUnEKo9iewn
      noRWUGh3OXQbMQdAKBTCmTNnMDg4iEuXLuHpp5++oc3jB3k8HmzZsgWWZeHcuXPIzMyEx+PB
      3LlzUVtbi9HRUVRWVkIIAVUdu3hrWdYtj3kr0jsTunsW5PDb0PI339ExaOqQoWFYHWdhnHsD
      VlcjoDmgzVsFdclmKLMXfeRF3bsaU02Ha+uXEHr+b2DWH4Zr1ccnfYypzBgewvCrL8I5txhZ
      2x+CwibvSS/mn9DAwAAuXryI/v5+5OTkYGRkBNnZt/90JYTAjBkzEAwGsWHDBqSnp0NRFGia
      hry8vLsq/saBHNCyVkO/9hrM0S6oHl6om46svk5YrSdh1h+AHLgK5BRB2/A41LLVELmzJ+Wm
      go8ihICjagPU4kUI738ezqqNEG5v3MabSt678Ktf6ULBN/+UF36niJgDoKCgAFJKbNq0Cb29
      vcjIyIjp+4QQmDVr1g1fmzdv3sSqjHEcLWMZ9Gs7YQ6fYQBMM2bHGVjnD8BsrwX0KJRZi6Bt
      fALK3KWAJz2uE/8NFBXu7b+G4L/9GcJHX4Vny+cTM26S0691Y3j3q/Ddsw6+lffYXQ7FaELn
      aIqi4Pjx4ygtLZ3E9fvJI5y5UHwVMIZPw5G/A0LhKehUJy0TZs1LMGteArzZUBd9DOrizRD5
      pRBq4n++QghopVXQFq1F9PArcK3cBiVrRsLrSCZS1zH4s+cARUHO577EJ36nkJhn8Z6eHkSj
      UTz++ONoamrC6OhoPOu6I0LRoGWtggx3wwq1210OTQLr3H6Yx1+Asmw7nJ//K2hbfhPKzHJb
      Jv/3CCHg+fiTkJaF8BvP21ZHsgjVn0HwxFFkfeLTcM6aY3c5NAExB0BaWho6Ozuxd+9e9PX1
      4dVXX0Vvb288a7sjasZSQHHBGD5tdyl0l8z2d2Ac/L8Q81ZC2/hFiMz8xC313IaSPweu1dsR
      PfUmjMtNdpdjGzMwgoEXfgTH7DnI2PEpu8uhCZpQADz44IMoLS3FQw89hA0bNsR8HSCRhOaD
      mr4Q5lAtpBW1uxy6Q1bfJRh7vwuRVQjH1q9BuCb28Fa8CSHg2vwYhNuH8P7nIS3T7pISTloW
      /G/sht7ZgexHPg/Vm1w/I7q9mAOgr68Pr7/+OpqamtDc3IyioiK4XK541nZHhFChZa+BNPww
      RxrtLofugBz1Q3/9bwFFQPvE7wNpybkBm/BlwL3lCejNtdCbau0uJ+GMnm4Mv/4yvNX3wLdy
      jd3l0B2IOQBcLhfy8/Oxdu1arF27NikvAr9H9ZVDqOkwBk7YXQpNkNQjMPb+IzDcA237NyBm
      lCTNss8HCSHgXLUNSt5sjO7+D0hDt7ukhBm78PssYFnIfuTzEHwobkqKeRYPBoPo7u5GY2Mj
      Ghsbx7dvSEqqB2rmCpiBJli63+5qKEbSMmEe+g9YF9+Btuk3oBQvS9rJf5zDCc8Dvwar5zIi
      J/faXU3ChJvPI3jiCDK2PQhXaZnd5dAdijkAfD4f0tPTMXv2bMyaNSupzwCEUKBlrwaMAMzh
      s3aXQzGyTu+CdXYv1OpPQanalvyTP959OGzBKmhlyxF+8yVYoRG7S4o7MxTEwIs/hFZYhMwH
      2CRnKot5Fvd4PFixYgW6u7sxMjIyvidQslI8cyHcRTCGT9ldCsXAaq2Befx5iPK1UNd9HiKJ
      P2B8kNAc8Oz4MmRgGOE3X7K7nLiSUiJw+A1E21uR/dkvQM3ItLskugsxv8sURUFrays6Oztx
      6dKl5P90pjihZS6HFWiFFe6xuxq6Bet6G4w3/z+InNnQ7n8Gwjn1thFQ55TDueJjiNTshtl7
      xe5y4sbou47hV34K77KV8K1eb3c5dJdiDoCrV68iOzsbzzzzDAzDwPDwcDzrumtCCKjZ9wCW
      DmO4zu5y6CPIkV4Ye78NqBrUHd+E8E7NT5RCKHBv+wIAidFfPmd3OXEhDQNDL/8EVjSCrEe+
      wAu/00DMAVBQUICrV6/ixz/+MaLRaFI+A/BBiisPircE5kANpEzii9YpSkZDMPZ9Bwj0Q9v2
      dYjsWbf/piSmZBfAteFTiJ49Cr2jwe5yJl24pQHBYweRvuUBuOZX2F0OTYKYAmBkZAQ9PT14
      5plnsH37dqxfvz75l4AAQGhQs1bAilyDNdpldzX0Pu/d8SOvNkK979ch5iydGr9TtyCEgPtj
      n4GSno3R3T+eVg+HWaEQBl/6EdTsHGQ++Fm7y6FJElMANDc3o729ffxZgOPHjyMUCsW7trsm
      hBi7G0gCxuDbdpdD72OeegVW4xtQqh+GsnDzlJ/83yO8aXBvfQJG+zlE647YXc6kkFIieOIQ
      om0tyP7sl6BlTV6THbJXTAFQUlKCkydPoq6uDidPnsTQ0BC83qmxD7rQ0qFmVMEcOgXJ1nRJ
      wbxwBFbNT6GUb4B6z+em1B0/tyOEgKt6E9TZ5QjvfwEynPwflG7H7O/F0CvPw71oKXzrPmZ3
      OTSJYnrn5ebm4oknnsDFixfR19eHr371qxN6DkBKif7+fgwODsIwDLS1taGjowPhcPiOC4+V
      UDSoWSshI/0wA81xH49uzbrWDPPA9yHy50Hd9HRcOnfZzuGCd8eTMK93Inx8t93V3BVpGhj+
      xc9hhYLIfuxJXvidZmLaU1cIgZKSEpSUlNzRILquo6amBpmZmZg3bx46Ozvv+Fh3Qs1YBKhu
      mIOnoGUsTti4dCPp74Gx79uAywNtxx9CuNPtLikuhBDQypfDsaAa4TdfhGvlZigZybmf0e1E
      WpsROLQPaRu3wDV/gd3l0CSLeVN1XdfR3t6OYDCIK1eu4MEHH7zlWYCUcvxhsTNnzqCqqgqd
      nZ3w+/2IRqMIhULQNG28QTww1hPYMOKwTCPcUNKXwBiugxr5NKBOjeWr6UREArDe+A5kaAjK
      g/8PTG8OEI+fdRJxbn8S+nf+AKH9P4X7U0/bXc6EyfAoBn/2IwhfGtI++Wh83ptkqwk1hGls
      bMShQ4fQ3d192+cAwuEwDhw4gIsXL6KtrQ2Dg4Po7u7G3LlzsXLlSgwPD6OlpeWu/wKxUaBm
      VQP6MHcItYMRhXnk/0Jea4Z639MQhanxSVItLIbzno8jcnIfzOuddpczYaG3jyLa0oisz3we
      anau3eVQHMR8BpCbm4uWlhasWLECgUAAPt+t9/72eDzYsmULotEoPB4PotEovMnZ8AUAACAA
      SURBVF4venp6IKWEoihwOp1jD2ypYy3kLMuCpsWn05PMqIDhnAE5fBraDG5dmyjSMmGd2wXR
      egTK6sehLPgYhJg+F31vx7PlMUTPHkNkz7NIf+rPpky7RGNwAIHXXoSrbAHSNt4PJU7vS7JX
      zO9EwzCwfft2bN26FYWFhTDN2O5xdjqdKCoqwty5c7Fx40bk5+fDsiwUFBTEpTn8R1K9ULOW
      wfQ3wIoOJm7cFGddOAzrnZcgKrdAqf5MSk3+AKBk5cF938PQG9+G3nLG7nJiIi0TI3t3wvQP
      Ieuxp6A4k6/vB02OmN6NlmVh586d2LlzJ1599VXs3bt3wpvBKYqCzMxM+Hw+lJWVoaSkJKE7
      igohoOWsBawwzOFzCRs3lVndjbAO/ytEUSXUdV+ennf83IYQAu71n4CSnY/Rvc9NiZ4B0Uvt
      GNn/C/g23g/3At40MZ3FNAMLIbB48WJUV1dj0aJFePrpp6fMcwDvp7hnju0Q2n/c7lKmPTnc
      DXPf3wHeTKj3/+60veMnFsLtg/cTvwbjUjMitQfsLueWZDSKoZd+CMWXhsxPP2F3ORRnMQdA
      WVkZmpubsW/fPuzcuRO6nvyfZD5EcULLXg0rdAnWaLfd1UxbMuyHsf/vAX0U6tY/ANLy7C7J
      VkIIOBevgVayCKN7fwIrSR8Ok1Ii9PYRRBrOIuOBR6DlzLC7JIqzmNdgAoEAioqK8NRTT+HL
      X/5y3C7WxtPY1hDVgGXCGEy9Hq6JII0IzMP/CvRfhLrlGxB586fNNg93Qzic8D7wZVjD/Rg9
      +LLd5dyUNeLH0MvPwllahrRN2+0uhxIg5gBIS0tDY2MjfvSjH+HZZ5+N+SJwshGuGVDSy2EO
      1nJriEkmLRPWqZ9Bth2BsuZJiLmrOPm/jza/Co6l6xE+/AuYg9ftLmectCyEm86h/1//DlbA
      j6xHvwzFPfV6MtDExfwx3u124+GHx9q/CSGSuiXkrQjFAS2rGtHOF2AF26Gmc1vbyWI17oN1
      5mWIxTugLN4xrfb4mQxCUeB94EkMNbyD0N7nkf7EN2ytR1oW9MvtCOzfheDbR6GmZSD7yWfg
      WrTE1roocWIOANM00d3dDSkl3nnnHSxZsmTKhoCavRy48gqMoToGwCSxOk/DOvljiNnLoK7+
      Qkre8RMLNa8I7nU7ED7yC7jXPwDH3MT//kkpYVy7gpG9OzF68hCgOZG2aTvSt30K2oyChNdD
      9ok5ADRNG79vv6mpCcFgEFlZWXErLJ6ElgE1YyHMgbchZ30aQuFkdTeswU6Yh/4ZSM+Heu8z
      KX3Hz+0IocC79TFET7+F0H/+GBlP/0XCHg6TUsLouYrgob0IHT8AGY3Au2EL0u5/EI6ZsxNS
      AyWXmAPAMAy0t7fDNE2sWLEC6elT900uFA1azlpEButg+huhZS2zu6QJkVJCBrsBCAh3NoTm
      tq+W8AjMN/8BsEyom74OkZ5vWy1ThfBlwLP1cQR//n1E60/AtTS+vXWllLCGBhCqOYjAvp2w
      IhF4qtfCd/9DcBbPnzJPJ9Pkm9AZQH9/P/x+P/Lz86f8xT01YwGElgaj/8SUCwDreh2M2n8C
      AAhXNoQ3DyJ7PkRWKYRnBoQnF8IZ/+c0pBGBdfAfgeErULf8IURuadzHnA6EEHCt3orwsd0I
      7X4OzoXVEM74hLgZ8CN0ZB+Cb+2GOdAH1+JqZHzyCTg48RMmEABXrlyB2+3GF7/4RfzgBz+A
      3++fsktAAADVAzVrCYyhOkgjAKGl2V1RTGR4CGb9jwDNDXX2Rsihi5DBHlh9jUBkBMLhg/Dk
      Ar5CKNnzIDLnAr58CHcWhHvyGq5Ly4T19rOQXWegrvsKxNzqKf+hIJGEyw3v9i/A/6O/RvjE
      fnjufWhSj28FRzB6+jiCb+6C3tUBd9UqZH35d+EqX8w9/WlczAGQn5+PK1eu4Oc//zlCoRDS
      0qbGhPlRhFCh5a6D0XsExlAdHDM22F3SbUnLhNm+GzJ4DdrqP4A6c9XY1/Ug5OggMNoPOdAG
      a7AdCFyD2dcMhP2A5gbcWRBphRDZ88aCIS0P8OYBTt8dTdxWw27Iht0QVQ9BLNqecnv83K2x
      h8PugaNsKUJv/BzOZRugZtx9q0UrEkbk7EkE9vwM0SuX4CxdgJzf+hO4l93DiZ8+JOYAUFUV
      27ZtQ2ZmJgYHB8d38JzKFF8JhHsmzP53pkYADF6A2fY6lLn3QSmsHv+6cPggHD4gYzZQsAwq
      AKmHgPAw5Gg/5NAlyL4LkP4rsAb2wwoPQ6guwJsHkVYAkTNv7H9pBYA7E3Cl3zIUrI4TkLXP
      Q8xZCWXlE1xKuEPC4YTvoacw9A9/iNEDryDt079+x8eyImFEGs8guH8noq0NcMydj5zf/BZc
      i1fynn76SDEHQE9PD1paWvDII49g//79KC8vn5L7Ad1AcUHLXg695wCscA8Ud/LeAiejARiN
      LwDubGgVj9z2E7dweAGHFyJ9JpBfBVQA0ggDo4OQo0OQA+2Qvc2Q/iuQfS1AaBBwZQDuzLFr
      CjmlELnzIdILAV/ueCjIvjZYx74PZBRC2fgMhMO+C9DTgTZ7HlzV9yF85HW41++Allc0oe+X
      ho5oexOC+15GuP4UtJlzkPmFr8FdvQFqWkacqqbpQsgYt/XUdR3/9m//Bk3ToGkannrqqUlf
      89V1HQ5HYk9TzcBFhBv+Cs65j8NRuDWhY8dKSgtm6y6YTS9CW/HbUGdP3tmK1EfHQiHQCzl0
      GXLgIjDcBRkcAEKDEJoL8OYCnmyInFLIrtOAHob68T+DyCmZtDpSmdl3DYP/+/fgWFiNzK/8
      SUzfI6UFva0Rwf07EWk4BSU9C95ND8GzbgsnfopZzGcAQghs374dPT09CIWSczOrO6F4ZkH1
      lcDsr4FWcH9SrmXLkS6YrbugFFRDKZrcZjbC4QEcHoiMIqBo7G4oaUSA0UEgNAjZ1wY5eAly
      qBOy4zigOqHc+ztAdvGk1pHKlNwCeDY9jNAvX0C0pQ7Oio++K01KC0ZXB0IHd2G09giE2wPf
      jsfgXXs/1JzU3nSPJm5CS0Bnz57FpUuX4HA4sGrVKmRmxnZXiZQSAwMD4z0BLl26BFVVMWfO
      HPvvHFEcULOroV95FVaoC6pvrr31fIA0wjAangMUBeqiJyCU+G/CJzQXkF4IpBdCFCwaq8PU
      gdEhQHVCeCbvbiIa+3Dl2fggwiffQGjvT+GYV/mhC7ZSSpi9VxF881WE3z4Eoarwrt8G76aH
      oOVPbNmI6D0xzyaZmZlobm5GZWUlIpEI3O7Y1351XUdNTQ0yMzORn58Pv9+PcDgMh8OBmTNn
      3lHhk0UIATX3HuhdO2H2v51UASClhHn1OKzeOmiVX4KSPsu2WoTqSPltneNJpGXAu/VRjLzw
      T4icOQr3qk0A3v0d6O/B6NE9CJ94E1YkDHf1vfBteRha4Rx7i6YpL6YAGB4ehmVZ2LZtG9xu
      9/jkfStSyvGuYWfOnEFVVRU6OzvR2dmJTZs2IRAIoKmpCYWFhbAsC8BY5zHDsGGHTsUHkVYO
      c+AdGDMfAkSS3NUS6oHR9CKQsxiYvdmefxtKGK36PqjH9iC453loi1ZCRiOInj6M0IHXYAUD
      cCxejbRND8ExpwxQFP4+0F2LKQAGBwdhGAYuX74MYOxT89KlS2+5GVw4HMaxY8dQUlKCtrY2
      OJ1OdHd3IyMjY+zRdMtKns3khAY1dy2Mjh/CCrRBSYYN4iwdRvOLgBmBtvBxQGVf1ulOOJzw
      feJJ+L//3+F/7h9gXr0Ea6gPzorl8G57FGpxBZAs7xmaFmIKgOLiYjQ1NSEQCEDTNNx33323
      bQjj8XiwZcsWRKNReDweRKNReL1elJSUoLa2FqOjo6isrBxbgnn3mQLLsmxrNGNlV8G47IAc
      qoWWXWlLDe+RUsK6/g5wvRZq2aeh5SZBIFFCqAtXwLViIyJnjsBRsRzeJ34HzrIqPsRFcRHT
      baB+vx/f/e538dhjjyESiWDXrl344z/+4wldwLUsCyMjI0hPT0dHRwc0TfvQRWA7bgN9j5Qm
      oq3/BsvfAvfyv4RQ7dxgbQDRmr8EVDeca/987E4dShlWcATGlXY4ShZCOHnmR/ET0/lkZ2cn
      ysrKkJGRgby8PAghJtwT+L07gBRFwbx58zB37lz77wB6HyFUqLmrIfUhmEP1ttUhLQNG6y7I
      0X5oCx/n5J+CFF86nBXLOPlT3MW03pKWloarV69i586dADAttoG4GTW9AsKZA7P/HWi5q2yp
      wepvgHl5P9Q5m6DMqLKlBiJKDTE/CZwIdi4BAe8+XXnxORj9J+Be9j+gOO9+c64JjR8dQfTk
      /wKMEJxr/xuEewrvtkpESW/CtxRIKTE8PIwkyo1JI4QCNW8tYI7CGjqf0LGlZcK4uBvSfwna
      gs9z8ieiuLuje8p27949be9BVrxzINwzYfQeS+i4crgd5qU9UGauhVJQfftvICK6SzEHgGEY
      OHv2LM6dO4dFixbh2rVr8azLPooLau5qWIF2WKOJ+TtKPQi95acQDh+0BY8lZLsHIqKYA2B4
      eBh79uzB1atX8fLLL+Pll19GX19fPGuzhRACWu7KsQex+t+J+3hSWjCvHIYcaIY6/2EoXvbU
      JaLEiDkALMuCx+NBRUUF0tLSsGTJEgwMDMSzNtsIVz6UtHkwB2ohpRXXsWTgKoy2l6HkL4c6
      6964jkVE9H4xB0B2djaqqqpQW1uLBx54AMXFxZg7N3k2TptMQnVCnXEPZKgLVuBi3MaRZhTG
      hZ8BALTyz0GozriNRUT0QTEHQDgcRmNjI1wuF5xOJ0pLSye0I+hUo+ZUA0KD2X8qLseXUsK8
      VgPrei200k9CyeD++kSUWDEHgM/nw+OPPw7TNPG9730PgUAgnnXZTjgyoWQshNl/AtKMTvrx
      5WgfjAsvQmSWQp27bdKPT0R0OzEHQCAQwE9/+lO4XC783u/9HtLS0uJZl+2EokHLXQ0ZGYDl
      b5nUY0tLh9G+E9IIQVv4RQht+p5JEVHyijkAvF4vPvvZzyInJwdHjhyBaZrxrCspqNlVgJYG
      o69mUo9r9dXBvHoY2tyPQ81eMKnHJiKKVUw3nHd3d2Pnzp1wOBw4f/48vvnNb9q2bXNCaT6o
      WUtgDp6D1IMQDt9dH1JGhqBfeAkibRa04gcmoUgiojsT0xlAOBzGwMAAcnJy4PV6kZ2dnVQ7
      ecaLECq0/A2APgxzsO6ujze23cMvIEPX4Kh4AsLF3rpEZJ+YAqCkpATf+ta3sGzZMqxcuRLP
      PvvshLaDllJC1/UpuX+QklYC4cqD0ff2XR/LGm6F0bUfatFGKLlLJqE6IqI7F9M6jhACTqcT
      8+fPx/z582GaZsztHC3LQk1NDXRdh9vtxqJFi3DgwAFkZmZi+fLlyMpK8k3PVA/U3FUweg7B
      ivRDceXe0WGkHoDR8hyEOweOskchBFv7EZG97mgWUlU15iUgIQSqq6vHnxzu6elBcXEx1q9f
      n/yTP8bqV3NXAmYI5sDpOzqGlBaMKwdg+duhzX8UwpXYbaaJiG4mbldydV1HR0cHCgsLMTw8
      jCNHjmDevHlIT0/H9evXsWfPHqxfvx65ubnjO4uapgnLiu/WC3fEkQ94i6FfOworewMwwU/v
      cuQi5MVdQN5qmFnLYEYicSqUiCh2cb2VR9M0CCGQl5eHRx99FLt27UJVVRXWrVuHrq4uXLp0
      CTNmzLihCYydDWE+ipRO6LkrYHT9AprRCzUt9i0wpBlB9PJrgKLBWf45KJ67v5OIiGgyxC0A
      HA4HSktLYZomDh48OB4Evb29aG1thWmaWLduXbyGn1RCCGh5a2B0vgZz4HTMASClBbP7CKzB
      ejgqnoTiK4pzpUREsYv7zfyqquL++++HYRjjn+7nzJkDADFfSE4GwpUDJaMcZm8N5OwHY9qz
      X45eh972EpSshVCL7ktAlUREsUvIDCyEuGFpR1GUKTX5A4BQnFDz1kKGe2GN3H6H0LHtHn4O
      QMJR/nnu9ElESWdqzcI2U7OXju0Q2nfilq+TUsK8/g7M6yegzf0ElIzSBFVIRBQ7BsAECEcG
      1OwlMPtqIc3wR78wMgDj4s8h0oqhzeFOn0SUnBgAEyAUbaxRTHQQ5mD9TV8jLQP6pV2QkSE4
      yr8IoXkTXCURUWwYABOkZi6AcGTA7K+96Z9bQ00wug9BLdoENXthgqsjIoodA2CiHGlQclbA
      HDgHKzJ4wx/JqB/R1p9AePKhlXzSpgKJiGLDAJggIRRoBesBPQBr6Pz416W0oHftgwxdgaP0
      s1Cc3OmTiJIbA+AOKL45EN5CGD1Hx79m+dtgdO6GWrABat5KG6sjIooNA+BOqB6oOStgjbTB
      Gr0OqQehtz0P4fDBUfIZ7vRJRFMCZ6o7IISAmr8OMCMwe0/CuHYI1kg7HPMeheLJs7s8IqKY
      pEBfx/hQPAVQ0ubB6D4AqYeg5q4YCwUioimCZwB3SKguqPlrIEPXAEWFo+SzMe0PRESULDhj
      3QU17x6YvW9DLbgXStpsu8shIpoQIZOoUa+u60nZD+BWpBHi075ENCVxCegucfInoqkqIQEg
      pYSu63jvZCNpWz8SEaWQuF8DsCwLNTU10HUdbrcbixYtQk1NDRRFwb333guXyxXvEoiI6Cbi
      fg1ASolIJIJQKIQTJ04gIyMDVVVV8Pv9GB4eRlVV1fhrp+I1ACKiqSpuZwC6rqOjowOFhYUY
      Hh7GkSNHMG/ePAwPDyMjIwOqqqKrqwtSShiGAYBLQ0REiRTXJSBN08abwT/66KPYtWsXCgsL
      MTg4iOHhYWRmZn6oXSTPAIiIEiPuS0CmaeLgwYMQQsDpdGLZsmU4evQoFEXBpk2b4HT+qlcu
      l4CIiBInIc8BvLfM897kbpomhBAfagzPACAiSpyEPAn8wWUeVVUTMSwREd0CHwQjIkpRDAAi
      ohTFACAiSlEMACKiFMUAICJKUQwAIqIUxQAgIkpRDAAiohTFACAiSlEMACKiFMUAICJKUQwA
      IqIUxQAgIkpRDAAiohSVkAB4rx9AAloPEBFRjOLeD8CyLNTW1sLv98PtdmPJkiU4cOAAMjMz
      sXz5cmRlZcW7BCIiuom4dwSTUiIQCMDlcmHv3r1YuHAhgsEgKisrb2gHCbAjGBFRIsUtAHRd
      R0dHBwoLC6GqKg4dOoSFCxfC7Xajra0N/f39WL9+PXJzc2EYBoBftYokIqL4i+sSkKaNHf74
      8eOorq5Gfn4+QqEQ1q1bh66uLly6dAkzZsy44VM/zwCIiBIj7ktApmli586dyMnJgcvlwqxZ
      s9Da2grTNLFu3Tqkp6ePv5ZLQEREiRP3ALgZy7IAAIpy401IDAAiosSJ+11AN/PBiZ+IiBKP
      MzERUYpiABARpSgGABFRimIAEBGlKAYAEVGKYgAQEaUoBgARUYpiABARpSgGABFRimIAEBGl
      KAYAEVGKYgAQEaUoBgARUYpiABARpai4bwctpURzczMuX76MuXPnoqysDMeOHYPT6cSaNWvY
      ApKIyCZxbwhjWRauXbuGwsJCvP766ygqKkJRURGGh4ehaRrKysrGX8uGMEREiRO3AJBSwjRN
      KIoCIQSOHz8Op9OJwcFBbNu2DcFgEHV1dVi3bh2bwhMR2SBuS0DhcBg1NTWorKxEa2srcnNz
      sXDhQhw8eBCRSATBYBButxtCCDaFJyKyQdyXgAzDwA9+8APMnz8fLpcLZWVlOHr0KCzLwo4d
      O+Dz+cZfyyUgIqLEsaUpvK7rEEJA07QPfZ0BQESUGLY0heckT0RkPz4HQESUohgAREQpigFA
      RJSiGABERCmKAUBElKIYAEREKYoBQESUohgAREQpigFARJSiGABERCmKAUBElKIYAEREKYoB
      QESUohgAREQpigFARJSiEhIAoVAIx44dAzDWKnLfvn04ePAghoaGEjE8ERHdRNwbwliWhba2
      NgwODgIAenp6UFxcjIqKingPTUREtxC3AJBSwjRNKIqCqqoq9Pb2Ahhr+9jQ0IC2tjZs3rwZ
      LpcLhmEAAEzThGVZ8SqJiIjeJ24BEA6HUVNTg8rKSuTn549/vaysDGVlZbh8+TLq6+uxatWq
      G1pEsl0kEVFixC0APB4PNm/eDMuycOLECbS1tcHlciEnJwfd3d3w+/1Yu3ZtvIYnIqLbEFJK
      mehBDcOAEAKqqt7wdV3XeQZARJQgcb8IfNNBNVuGJSKi9+FzAEREKYoBQESUohgAREQpigFA
      RJSiGABERCmKAUBElKIYAEREKYoBQESUohgAREQpigFARJSiGABERCmKAUBElKIYAEREKYoB
      QESUohgAREQpKiEBEAqFcOzYMQBjzWAOHTqEmpoa2NCLhoiI3hX3ALAsC21tbRgcHAQA1NXV
      oby8HFlZWWhra4v38ERE9BHi1ppLSgnTNKEoCqqqqtDb2wsAGBgYwMqVK5GRkYG6ujrMnz8f
      hmEAAEzThGVZ8SqJiIjeJ24BEA6HUVNTg8rKSuTn549/3eFwIBKJIBgMwu12QwhxQx9g9gQm
      IkqMuDeFtywLJ0+exLlz51BZWYmysjIcO3YMlmVhx44d8Pl8469lU3giosSJewDcjK7rEEJ8
      qDk8A4CIKHHitgR0K5zkiYjsx+cAiIhSFAOAiChFMQCIiFIUA4CIKEUxAIiIUhQDgIgoRTEA
      iIhSFAOAiChFMQCIiFIUA4CIKEUxAIiIUhQDgIgoRTEAiIhSFAOAiChFMQCIiFJUwvsB9Pb2
      Yt++fSgqKsLy5cuRlZWV6BKIiAg2BMD169dRXFyM5cuX39AOkoiIEishLSGllDh//jz8fj+W
      Ll2K7u5unD17FitXrkRxcTEMwwAAmKYJIUS8yyEiItjQE7ivrw/Z2dno6urCwMAAVqxYMf5n
      7AlMRJQ4CV8CklLiwIEDcLlcWL9+faKHJyKidyX8DOBWeAZARJQ4vA2UiChFMQCIiFIUA4CI
      KEUxAIiIUhQDgIgoRTEAiIhSFAOAiChFMQCIiFIUA4CIKEUxAIiIUhQDgIgoRSU8AAzDwKFD
      h1BTU4Mk2oaIiCjlJDwA6urqUF5ejqysLLS1tSV6eCIielfCA2BgYAAzZ87EnDlzcP369UQP
      T0RE70p4ADgcDkQiEQSDQbjd7kQPT0RE70p4P4Dr16/j6NGjsCwLO3bsuKEvMPsBEBElji0N
      YXRdhxACmqZ96OsMACKixEh4S0gAnOSJiJKALQHwflJKGIYBADBN05YaTNOEqqocl+NOGikl
      LMviuAkYV0oJRUns5UzTNKEoCoQQU3pc2wNACHHDGYFdZwccl+NOpvc+2HDc+LIsC5ZlfWg5
      ORE0TUt4AEz2uEn1JHCiU5zjclyOO7XHFULYMu50+TdOqgCwY3kg1nGDweD4UlUix50I0zQR
      DAYnZVzTNG+7JPfe6XcoFIKu65MybjzYMa4Q4q7GlVJiZGRk0saVUsb0M7pT740rpZz0pdxg
      MPiRx7xZAFiWhUgkEvNOA+FwGNFodEI1qao66Z/+/X7/bWue7HGTKgBu5urVqzh//nxCxgoG
      g3j22Wdx8OBBXLly5YY/a25uRiAQSEgdQ0ND+M53voNgMIhoNIrnnnsOTU1Nt/2+YDCIxsbG
      Sanh5MmT2LNnDyzL+sjX+P1+XL16FW1tbRgcHJyUcZ999tnxn/fRo0fx2muvJWzLkP379ydk
      nA+KRqN46623bviaYRg4c+bMpI0RiUTw7//+7+jp6bnjY0Sj0Vv+fo2MjOC1117D8ePHcfHi
      xVse68KFCzF9WAGApqammN97g4ODeP3113H8+HEcOXLkht/fQCCA1tbWD33P5cuX7+ih1Nra
      WrzyyiswTRNHjhxBJBKZ8DHe7/Tp0zH9rnd0dODFF1/Enj17cO7cubt6f9h+DSBWLS0t4z+8
      2bNno729Hbqu4xOf+ATq6uqwfv16HD9+HCtXrsTBgwfh9/uxcuVKtLS0YHR0FAsWLICmaSgo
      KEBLSwtWrVp103FKS0uxYcMGSClx+vRptLe3IycnB16vFwcOHEAkEsG2bdvwzjvvIBKJoKCg
      AFVVVejq6sKMGTPQ09ODixcvwul0Ij8/H5cvX8bcuXMxNDSEe++9F0ePHsW6detuu2ZZWlqK
      ixcvYubMmcjIyICUEvX19ejo6IDX60V2dja6urpQUVGB0dFRXLlyBYWFhWhubkZ3dzfmzJmD
      5cuX3/G/9+joKLxeL6LRKOrr63Ht2jWMjIzgkUcewe7duyGlxNq1ayc9FGfPno2rV69i0aJF
      iEQicLvd6O/vR21tLfr7+/HJT34Sp0+fxr333ou33noLH/vYxyb1tPjYsWPjv0tr1qzBz3/+
      c6Snp8Pj8aCiogKHDx8GAHzuc5+b9E+A7x975cqVkFLi4MGD2LBhAxoaGjB79mzk5ube0bG7
      u7uxdu1atLW1ISsrC/X19ViyZAnq6uowZ84cHD9+HACwcuVK9PX1oaqqCmfPnoXb7UZnZydm
      zpwJn8+Ho0ePIhgM3vT9o+s6pJSorq6Gx+NBbW0tOjo6kJubi+rqarz22mtwu91YvHgxTp8+
      jaysLCxZsgQnTpyAEAL33XcfTp06BdM0MTAwgKysLGRlZUEIgQMHDiAajeKhhx6C1+v9yL9n
      c3MzNm7ciOzsbBw+fBjd3d2ora1FZmYmXC4XmpqaEI1G0d/fj5GREWRkZCAvLw81NTXj7+2G
      hgb09/ejpKQE2dnZaG5uRnZ2Nu65554P/a6lp6ePh4eUEq+//jqklCgpKcHQ0BDWrFmDU6dO
      oaioCCdOnIBlWXj44YfxwgsvIDMzE+FwGKqqYu3ateju7sbrr78Or9eLqqoqHDp0CFJK/P/N
      nG1TE2cXx3/7kGc22YWFkGVjIhADWARlxqotMqaj0WKZqZ/Ib6WOr+wMU2pbkCDEIQWawJSQ
      RDA0kJBs2L5w2Lu20N631bl73uzsXDv7P+fsda5zzv/a3a+//ppnz57xGSEXmQAAB3dJREFU
      5s0b0uk0AOPj41y4cIEnT57Q1dXF7Owstm3z4MEDZmdnqdfrjI6OMjc3R7vd5saNG8zNzREI
      BKhUKmiaRiwW+/d3ACcSCoXw+XyUy2WOj4+ZmppibGyM3d1dJ/M2Gg1EUURVVYLBIIVCgVqt
      xszMDOfPnyefz5PL5YjH42fi5HI5njx5QqFQIJfLEYvFyOfzuFwubt26xdWrV8nn8xweHnL/
      /n0EQcC2bZrNJu12G1VV8fv97OzsUK/XGR4eZmxsDK/XS6FQOPX7h9NE0zSq1SqFQsHRV1VV
      AoEAxWKRer3OxYsXicfjVKtVpqenSSQSJJNJUqnUP6pGSqUSBwcH1Ot1tre3sSyLVCrF5cuX
      KZVKNBoNZmZmEEXxo9AKLpeLSqWCqqqIokggEMDr9WJZFq1Wi8PDQ3Z2dlAU5YNzoid+Oznq
      uk46neb4+JiFhQVisRi2bX+U35j8fh7DW3pjcHCQpaUlyuXyey/+tm2zsrKCLMv88ssv2Lb9
      jp0rKyt89dVXDA0NYVmWQ58cHR3RarWQJIlz585hmiYjIyNnFk+apnH9+nWePn3K4uIia2tr
      TvzYts3w8DD37t1jb2+PZDLJZ599xuHhIS6XC03T+Omnn3C5XNy5c4e+vj5u376Nbdt4PB5u
      3brF+Pg4W1tbf2vvCQUmyzKvXr3i5s2bTE1NkUwmGRsbY2hoiKOjI+7du+f44Nq1a6TTadbW
      1tjY2CAWi7G+vk6j0UDXdT799NNT59r4+DhLS0u0220qlQqGYXD//n1KpRJer5e9vT1qtRqr
      q6v09vYiSRLb29uYpsmdO3cwTZOpqSlev35NJBJhenoay7JYWFjAMAxEUaRYLLK7u8vMzAyK
      oryD73a7WVxcpK+vD0EQKBaLNJtN0uk0sixjWRbxeJxMJoOu69y9e5e+vj6mp6epVCr/7gRg
      2zbFYhGfz8eLFy+4efMm3d3dzvhJBXbyJkCz2aRcLiNJEhMTEwBEIhFEUcTj8SBJEsViEV3X
      z8RMJBKk02lM08Tn8zEwMMCXX37pjO/v79PR0eHcVxAELMtyEsDLly+ZnJykq6sLt9vt6JtM
      Jvn222+JRCL/le0ejwfbtimXy2iahmVZZLNZJicn6ezsxOPxoOs6kiTRarWwLOuDca9ra2sk
      EgmGh4ffaZl//fVX3G434XD4o/LqAwMDPHr0iKGhIQB++OEHrly5QiKRAGBwcJDHjx9z8eLF
      D4ZZLpdxu93O64ynJVCfz4dhGNy+fRtVVT8YdqVSeQf793x0b28vm5ub73wx/79Ks9lEEAQU
      RSEUCrG7u+vETKvVwuPxsLGx4dB47XbbGRsaGuLGjRvMzs4iCMJfzrF6vY6iKKRSKXZ2dpz4
      OVlo4T9JTpZlp8Pr7OxkYmLib59nrVYjEAhweHjI8fEx9Xr9T9cEg0G2trawLIu9vT0URaFW
      q9Futx1MURQdG0/O4W1sB4NBgsEgg4ODpFIpRFHEMIwzuz1Jkujp6WF7exuv10utVnNicWRk
      hG+++YZwOIzf76e3t5dUKkVPT8+ZNp7sq/n9fiKRCKlUiu7ubsLh8J8Kx/39fQ4ODggEAkQi
      Eb744gt0XXeKMpfLhaIoDA8Pc+3atdP1f/jw4cO/9Pr/SdrtNnNzczQaDcbGxpAkiUwmQzAY
      xDRNOjo6kGUZn8+Hqqo8f/4cr9dLMplkfX2darWKaZqoqkooFEIQBNxuN0dHR0Sj0TNxZVkm
      FAohiiKapjE/P0+r1aKnp4dXr17h9Xq5cOECkiQRDAbx+/38+OOPAMTjcVwuF8vLy6iqimEY
      jp6yLJPP509tI8/S46Tt1jQNn8+Hx+Mhm82iqiqRSARFUXC73XR0dPD9998jSRK6rqMoiqPf
      +4hlWfT399PZ2YkgCLx584aNjQ0URaG/vx9BENA0DcDBDwQCuN3u98L7o0SjUWzbxjRNBEEg
      Ho+zsLAAQCwWo7u7m/X1dUZHRz8IDbO0tMTq6iqff/45qqoyNzeHy+Xi/PnzAM5iPzIywvz8
      PK9fvyYajf7jJGjbNplMhp9//pnr16/T0dHBd999h8fjIR6PO37e3Nzk0qVL+Hy+98JptVqE
      QiGi0SjhcJhGo4FlWayurmIYBqOjo+TzeXZ2dujv7+fo6IhcLkckEqHRaLC8vEw8HiccDnNw
      cOBQQn+UZrPJ8+fP2dzc5OrVq/T29jI/P49lWXR2djI7O0uz2WRiYgJVVclkMhiGQbVaZXNz
      E13XnXgWBMHpAP1+P9lslkAgQDwed+bi1tbWn7oiXdcpFApks1kuX77MwMAA2WyW7e1tzp07
      R6lUYn9/n3A4zIsXLxgcHKSrq4tcLke9XufSpUsEAgGWl5eRZRld1/H7/Xg8nlN9GwwGMQyD
      Wq3GwMAAtVqNlZUVrly5QjAYpFqt8sknn2AYBi9fvqRUKtHX14csy2iahiiKhEIhXC4XjUaD
      1dVVRkdHSSQSZDIZyuUypmkiy7LjF3i7L7K7u8vk5CTRaJTFxUUqlQqmaeL1ellYWKC7u5vj
      42PW1tbQNA1FUd7xrSAI/AaJ68ArKT49qwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='GC' width='384'>
      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
      KAIAAAxFAACAoQgAADAUAQAAhiIAAMBQBAAAGIoAAABDEQAAYCgCAAAMRQAAgKEWLQBSqZSO
      Hz+u1tZWua67WGUBAAtYtABob29XbW2totGoenp6FqssAGABixYAk5OTqqioUHV1tcbHxxer
      LABgAYsWAMFgUIlEQrOzswqHw4tVFgCwgMBiFdq4caOOHj0qx3F0+PDhxSoLAFjAogVAaWmp
      jhw5IsuyFAgsWlkAwAIWdUscDAYXsxwA4D4s9zEdk+m6rlKplCTJtm35/f5F7wN1qZttruvK
      cRzqLkJd13Xl8y3uqUy2bcvn88myrC9E3cc2F2NZ1l0jgsc1OqAudbPpzo4Ndb3lOI4cx3ks
      08mBQGDRA8Cruk/EmcCLneLUpS51l3Zdy7IeS90v2nv8RATA45geyLTuzMxMeqpqMes+CNu2
      NTMzk5W6tm3Ltu37vubO8Ht2dlbJZDIrdb3wOOpalvVIdV3X1fT0dNbquq6b0d/oYd2p67ru
      5643D2pmZmbBNu8VAI7jKJFIZHylgXg8rvn5+Qfqk9/vz/pe+O3btz+3z9mue+ez+0QEwL0M
      Dw/r0qVLi1JrdnZWb775po4dO6br16/f9VxXV5disdii9OPWrVv63ve+p5mZGSWTSf3whz9U
      R0fH5/7ezMyMrly5kpU+nDlzRm+//bYcx1nwNbdv39Ynn3yi3t5e3bx5Myt133zzzfTfu6Wl
      Rb/4xS8W7ZIh//iP/7godX5bMpnU+++/f9djqVRKbW1tWauRSCT0d3/3dxodHX3oNubn5++7
      fk1PT+vnP/+5Tp06patXr963re7u7ox2ViSpo6Mj48/ezZs39dZbb+nUqVM6ceLEXetvLBa7
      59UHBgYGNDY2llH7n3X27Fn97Gc/k23bOnHihBKJxAO38VltbW0Zrev9/f36yU9+orffflsX
      Llx4pM9Hb2+vpqamHt93AJ/nzsJ1dXWl/3hVVVXq6+tTMpnUiy++qPb2du3Zs0enTp1SU1OT
      jh07ptu3b6upqUldXV2am5tTXV2dAoGAysvL1dnZqd/7vd+7Z601a9bo6aefluu6amtrU19f
      n4qLi5Wfn6/33ntPiURCzz//vD788EMlEgmVlZWpsbFRQ0NDKikp0ejoqK5evapQKKTS0lIN
      Dg6qurpat27d0t69e9XS0qLdu3d/7pzlmjVrdPXqVVVUVCgSich1XV28eFH9/f3Ky8tTcXGx
      hoaGtGHDBs3Nzen69evpZRseHlZ1dbW2bt360O/73Nyc8vLyND8/r4sXL2pkZETT09N69dVX
      9Q//8A9yXVe7du3KeihWVVXpk08+UUNDgxKJhMLhsCYmJnT27FlNTEzo5ZdfVltbm/bu3av3
      339f+/bty+qw+OTJk9q9e7daW1u1c+dO/fSnP1VhYaFyc3O1YcMGffDBB5Kk1157Let7gCdP
      nrxrPZakY8eO6emnn9bly5dVVVWl5cuXP1Tbw8PD2rVrl3p7exWNRnXx4kVt2rRJ7e3tqq6u
      1qlTpyRJTU1NunHjhhobG3X+/HmFw2ENDg6qoqJC+fn5amlp0czMzD0/P3dGGNu3b1dubq7O
      nj2r/v5+LV++XNu3b9cvfvELhcNhPfXUU2pra1M0GtWmTZt0+vRpWZal5uZmnTt3TrZta3Jy
      UtFoVNFoVJZl6b333tP8/LyOHDmivLy8BZezs7NTzzzzjIqLi/XBBx9oeHhYZ8+eVVFRkXJy
      ctTR0aH5+XlNTExoenpakUhEK1asUGtrqxKJhA4ePKjLly9rYmJCNTU1Ki4uVmdnp4qLi7Vj
      x47fWdcKCwvT4eG6rt566y25rquamhrdunVLO3fu1Llz51RZWanTp0/LcRx9+ctf1o9//GMV
      FRUpHo/L7/dr165dGh4e1ltvvaW8vDw1Njbq+PHjcl1Xf/AHf6D3339ft27d0qFDhyRJW7du
      1YYNG/TOO+9o+fLlamlpkeu6evXVV9XS0qK5uTlt2rRJra2tsm1be/bsUWtrq/Lz83Xjxg0V
      FxerpqZGknT8+PEndwRwRzQaVW5ursbHx+U4jpqbm7V161ZNTk6mkzcej8vn8ykajSoSiWhg
      YECxWEyvvPKK1q5dq/7+fnV3d6cX/F66u7v1zjvvaGBgQN3d3Vq9erUGBgYUDAb17LPPaseO
      Herv79fs7Gz6fAbXdTU/Py/bthWNRpWXl6fR0VHF43HV19dry5YtCofDGhgYyPj8h2g0qqmp
      KQ0MDKT7G41GlZ+fr5GREc3Nzempp55STU2Npqam9NJLL6m2tlZ1dXU6cODAI+2NjI2NaWZm
      RvF4XMPDw0qlUjpw4IC2bdumsbExxeNxvfzyy/L7/Z5MKwSDQd24cUPRaFQ+n0/5+fkKh8NK
      pVJKJpOanZ3V6OioCgsLsz4neud9u/NvSUmJDh06JMdx1NbWptWrV8t13YfaY8y0djweTz+2
      fv16XbhwQePj4w+98XddV5cvX1YgENAnn3wi13XvWs7Lly/r5ZdfVn19vVKpVHr6JJFIKJlM
      yu/3a9WqVaqqqtLGjRvvufGXpOLiYu3evVvvvvuu2tvb1dvbq9WrV+vatWtyXVcNDQ164YUX
      dPPmTdXV1enpp5/W7OysgsGgiouL1dPTo2AwqOeff14rV67UwYMH5bqucnJy9Oyzz2rr1q0a
      Ghr63OW9MwUWCATU0dGhffv2qbm5WXV1ddqyZYvq6+uVSCT0wgsvpN+DXbt26dChQ+rt7dXV
      q1e1evVq9fX1KR6Pq6SkRDt37rznurZ161ZduHBBtm3rxo0bqqys1JEjRzQ2NqZwOKybN28q
      Foupq6tL5eXl8vv9Gh4eVlVVlZ5//nlVVVWpublZExMTqqio0EsvvZQe/VVWVsrn82lkZEST
      k5N65ZVXVFhYeFf9UCik9vZ2rVy5UpZlaWRkRPPz8zp06JACgYBSqZRqamp0/tAQBXMAAAVg
      SURBVPx5lZSU6PDhw1q5cqVeeuml9KV49u3b92QGgOu6GhkZUW5urtra2rRv3z6tWLHid153
      50iA+fl5jY+Py+/3p/egysvL5fP5FAqFFAgENDw8rJKSkgVr1tbW6tChQ6qqqlJubq7WrVun
      F198Mf389PS0CgoKVFFRIZ/PJ5/Pp1QqlQ6Aixcvau/evVq+fLmCwWC6v3V1dTp16pQqKioy
      WvZwOCzXdTU+Pq7i4mKlUilduXJFe/fu1bJly5STk6OSkpL0RjiVSt13uuZB9Pb2qra2VvX1
      9XcNmaenpxUKhVRWVubpURfr1q3T22+/rfr6eknSRx99pG3btqm2tlbSpxvFt99+W0899VTW
      ao6PjysUCqW/17hXgObm5qqyslIHDx5UNBr1pPad9fiO8vJyDQ4OKj8//6Hbn5+fl2VZKiws
      VFFRkSYnJ9OfmWQyqZycHF29elU3b96UZVmybTv9XH19vfbs2aOWlpb0cwuJx+MqLCzUgQMH
      NDo6mv783NnQSv8/5AKBgBKJhHJzc7Vs2TI1NTV97t8zFospPz9fs7OzchxHc3Nzv/OaSCSi
      oaEhpVIp3bx5U4WFhYrFYrJtO13T5/Oll/HO/6VPpzQjkYgikYjWr1+vAwcOyOfzqbKycsHR
      nt/vV2lpqYaHhxUOhxWLxZRKpWTbtjZu3Kjjx4+rrKxMeXl5Ki8v14EDB1RaWrrgMt5Z//Ly
      8lRRUaEDBw5oxYoV9/zM3b59WzMzM+nXPvfccyopKUnvlAWDQRUWFqqhoUG7du2673vrf+ON
      N9647ysWmW3bam1tVTwe15YtWxQIBHT+/HlFIhFVVVWpoKBAgUBAubm5ikajOnPmjMLhsOrq
      6tTX16epqSlVVVUpGo2qqKhIlmUpFAopkUiourr6njXvfJFVVFQkn8+n4uJinTt3TslkUqWl
      pero6FAoFFJdXZ38fr8ikUh6qCtJNTU1CgaDunTpkqLRqCorK9P9DAQC6u/vv+cw8l4CgUB6
      2F1cXKzc3Fzl5OToypUrikajqqioUGFhoUKhkAoKCvThhx/K5/OppKREhYWF6f49jFQqpbVr
      12rZsmWyLEu3bt1SX1+fIpGI1q5dK8uyVFxcLEnp+vn5+QqFQg9V77dVV1fLcRxVVVXJsizV
      1NSk58NXrVqlFStWqK+vT42NjVmZhrlw4YK6urr0zDPPKBqNqrW1VcFgUGvWrJGk9MZ+48aN
      OnfunCYmJlRdXf3IXy67rqvz58+rv79fu3fvVkFBgU6fPq2cnBzV1NSk18HBwUFt3rxZubm5
      D1UnmUyqqKhI1dXVKisrUzweVyqVUldXlyorK7Vp0yZdu3ZNo6OjWrt2rRKJhLq7u1VRUaF4
      PK5Lly6ppqZGZWVlmpmZSU8J/bb5+XmdOXNGg4OD2rFjh8rLy3Xu3DmlUiktW7ZMLS0tmp+f
      V1NTk6LRqM6fP6/KykpNTU1pcHBQJSUl6c+zZVnpEWBeXp6uXLmi/Px81dTU6OrVqyosLNTQ
      0NDvjIpKSko0MDCgK1euaNu2bVq3bp2uXLmi4eFhrVq1SmNjY7p9+7bKysr08ccfa/369Vq+
      fLm6u7s1NzenzZs3Kz8/X5cuXVIgEFBJSYny8vKUk5Nzz/c2EomosrJSsVhM69atUywW0+XL
      l7V9+3ZFIhFNTU2psbFRlZWVunjxosbGxrRy5UoFAgEVFxfL5/OpqKhIwWBQ8XhcXV1d2rRp
      k2pra3X+/HmNj4+rqqpKgUAg/b5In34vMjk5qb1796q6ulrt7e26ceOGqqqqFA6H1dbWphUr
      VshxHPX29qq4uFiFhYV3vbd3PseXL1/W/wO+yWlFrzxA/wAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='HolidayPercentage' width='352'>
      iVBORw0KGgoAAAANSUhEUgAAAWAAAAGACAYAAACTJbjOAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAMgUlEQVR4nO3dz4vd9b3H8Wd++SMSk1TQLHS0olh7cRUD6iV0k2IXF9y6SKG4EH+s+hcI
      zcL/wPonuHCn+ANqxMWFIqIbL/5YSSCQQCjGNlOj6NyFHIap0cTJTN7j+HhswpxzvuPXxTzn
      xeGTkx0rKysrAXDN7Zy+AYBfKgEGGCLAAEMEGGCIAAMMEWCAIQIMMESAAYYIMMAQAQYYIsAA
      QwQYYIgAAwwRYIAhAgwwRIC3ueXl5ZaXl6dvA7gEAQYYIsAAQwQYYIgAAwwRYIAhAgwwRIAB
      hggwwBABBhgiwABDBBhgiAADDBFggCECDDBEgAGGCDDAEAEGGCLAAEMEGGCIAAMMEWCAIbun
      b2C7+Prrr6s6d+5cVfv3769q7969Y/cEbG0WMMAQC/gqvfXWW1WdPHmyqjvuuKOqs2fPVvXo
      o49W9dBDD1WrC/nEiRNVHThw4JLf9+jRo1UdO3ZsM24b2AIsYIAhFvA6ffTRR1V98MEHVT33
      3HNVXXfddWted/HixTVfL5bxkSNHqjp+/Pim3iewdVnAAEMs4HVavOf72GOPVd9fvgvXX3/9
      mq/PnDlT1aFDhzbx7oCfAwsYYIgFvE6L0wzLy8tVvfzyy1V98cUXVd13331VPfLII1Xt2LGj
      Wl3AFy5cqOq1116ramlpqar777+/ql27dm3u/wAwzgIGGLJjZWVlZfomfo7+/Oc/V/Wb3/ym
      qgceeKCqG264oao333yzqt/+9rfV6nvFH3/8cVWnT5+uVhf0p59+Wq0u5Geffbaqu+6665L/
      /cV1V+qbb775Sa8HNp8FDDDEe8DrtPishyeeeKKqPXv2rHn+nnvuqer555+vVhfwYjEv/vxP
      r776arX63vAzzzxzyddd6WdMLJbyvn37ruj1wLVjAQMMsYDX6ZZbbqnqs88+q+ree+9d8/zN
      N99c1bfffvuTvu/hw4er+vDDD6/yDoGtzgIGGGIBr9PDDz9c1euvv17V3XffXa2e3/3kk0+q
      uu2229Zc98orr1Srn3J24403rnn+3XffrerOO+/cjNsGthALGGCIc8DrtHhv96WXXqq+v3gX
      53mffPLJqm6//faq3njjjareeeedqg4ePFitfmra4nTDU089VdVNN910Vfe5OAXhX+aArccC
      BhhiAW+QxWc7nD9/vlpdwpf7TIfF63fu/O534Uaf17WAYeuygAGGWMDbnAUMW5cFDDBEgAGG
      CDDAEAEGGCLAAEMEGGCIAAMMEWCAIQIMMESAAYYIMMAQAQYYIsAAQwQYYIgAAwwRYIAhAgww
      RIABhggwwBABBhgiwABDBBhgiAADDBFggCECDDBEgAGGCDDAkN3TNwDMeGPpd9O3sO394dQ7
      P/q8BQwwRIABhggwwBABBhgiwABDBBhgiAADDBFggCECDDBEgAGGCDDAEAEGGCLAAEMEGGCI
      AAMMEWCAIQIMMESAAYYIMMAQAQYYIsAAQwQYYIgAAwwRYIAhAgwwRIABhggwwBABBhgiwABD
      BBhgiAADDBFggCECDDBEgAGGCDDAEAEGGCLAAEMEGGCIAAMMEWCAIQIMMESAAYYIMMAQAQYY
      IsAAQwQYYIgAAwwRYIAhAgwwRIABhggwwBABBhgiwABDBBhgiAADDBFggCECDDBEgAGGCDDA
      EAEGGCLAAEN2T9/AdvH1119Xde7cuar2799f1d69e3/0us8//7yqXbt2VbVv377NukVgi7GA
      AYZYwFfprbfequrkyZNV3XHHHVWdPXu2qkcffbSqhx56qKqvvvqqqhdffLGqL7/8cs3jS0tL
      VR0/fryqnTv9joTtyk83wBALeJ0++uijqj744IOqnnvuuaquu+66Na+7ePHimq8XS/nWW2+t
      6vHHH69qZWWlqhdeeKGq999/v6oHH3xww+8d2BosYIAhFvA6LZbsY489Vn1/+S5cf/31a75+
      7733qnr66afXPL5jx46qjh07VtXbb79dWcCwnVnAAEMs4HVanPddXl6u6uWXX67qiy++qOq+
      ++6r6pFHHqlWF+6//vWvqm655ZZLft/bbrutWj0fDGxfFjDAEAt4nRYL9e9//3tVDzzwQFV3
      3313VW+++Wa1upQX7xUvTjv8kBtuuKGqf//73z/6usXyvlL//Oc/f9Lrgat3uZ87CxhgiAW8
      TovPenjiiSeq2rNnz5rn77nnnqqef/75anUBL/5m22IJL94bXrhw4UJ1+c+EuNxnTCwslrLP
      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
    </thumbnail>
    <thumbnail height='384' name='KPI' width='384'>
      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
      XLeM8hjt7OwqfQ1gsVhYs2YNW7du5cqVKxiNRrWrC0Cj0eDi4qJut1xcXBxdu3bF2dkZAK1W
      e916vJGqthMfH09wcDAeHh43LCMuLo4JEyao8et0OgAOHz7MihUrSE5OxmAwAFBaWlppGbdT
      1yEhISxatIjdu3fzyCOPMGnSJLX7Sghxb9xUAvD09OS5554jOjqaefPmsWbNGlxcXKhVqxYN
      GjTg4YcfBqBTp07qxeHHHnuMpUuXsn79eo4dO8YLL7xQadm9evXigw8+wNHR0eogWqtWLfR6
      PZ06dVLLLj/YATfsL3ZycgIgPz+fOnXqAJCXl3dLZVTlwIEDfP/99yxZsoT27dtz4MABXn/9
      9Ruu5+LiUmnXzvXq8XY4OTndsAvpejHl5eUxZ84cXnrpJUJCQjCZTPTp08dqGeVPF+pvp66f
      eOIJ+vbty9GjR/nll1+YNm0a27ZtU5OiEOLuu+n/bRqNhrlz55Kfn8/ixYsBCA4O5syZM7Rs
      2ZK+fftSt25dtd/XxcWFxx57jG+++YaAgABatmxZeQBaLU5OTlYH//Ky4+PjqVu3Lv3796dZ
      s2Zcvnz5pnescePG+Pn58c0331BcXMyxY8c4ePAgvXr1uukyqpKdnY2joyNNmzYlJyeH0NDQ
      m1pv0KBB7N27l127dpGbm8vvv/+OwWC4bj3ejlatWnHkyBGOHDlCVlbWdW8dHTRoEKtWreLM
      mTNcvXqVvXv3kp+fj8lkokWLFiiKwq+//mq1jru7O6dOnSIjI4OrV6/eVl1/++23FBYW8thj
      jzF69GhycnIwmUy3vc9CiFt3wxaARqNRz/Y8PT157bXXeP311+nXrx8vvfQSr7zyCk888QQA
      derUUS9EQtn95j///DNDhw6tcIAvL7uy9wFGjhzJ8ePHefHFF1EUBUdHR8aPH3/D9dQds7Nj
      /vz5zJ49m549ewJl3Q4DBw6ssow/v1fV3wA9evTg22+/ZeDAgTg6OvLwww9bLVdZuQD9+/cn
      Li6OuXPnYjab8fDw4Ndff71hPVbmetsZPnw4W7duZfr06Wi1Wlq1alVlfU2fPp3Lly8zefJk
      ALp168aSJUvo1q0bzz33HHZ2durZf3kZo0ePZsaMGQwdOpR27drx/fff33JdJyUl8cQTT6DT
      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
      bv4//za4Ub0elr0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Payments' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAFXUlEQVR4nO3VMQEAIAzAMMC/5yFjRxMF/XpnZg4AOW87AIAdBgAQZQAAUQYAEGUAAFEG
      ABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAA
      UQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBl
      AABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYA
      EGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABR
      BgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUA
      AFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQ
      ZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEG
      ABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAA
      UQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBl
      AABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYA
      EGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABR
      BgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUA
      AFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQ
      ZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEG
      ABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAA
      UQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBl
      AABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYA
      EGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABR
      BgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUA
      AFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQ
      ZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEG
      ABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAA
      UQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBl
      AABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEGABBlAABRBgAQZQAAUQYA
      EGUAAFEGABBlAABRBgAQZQAAUQYAEGUAAFEfFxoG/IiMv0YAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Rainfall' width='384'>
      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
      AacNbkTVZkkOAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Temperature' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOzdeXAc93nn/3fPfQEY3Pd98gJJECIpkpJIxjpt2ZZs5ZA3jte73tiJ40pi
      O7tr+1e7UVxZu+JsJa6c9ipxfCheybWRyiRlioclUaF4CSDBAyBB4j4GA2AGwABz9sz8/kDQ
      IQiSoihxBkA/ryqWze4W+WAI9Kf7eyrJZDKJEEIIXVEURTGkuwghhBDpIQEghBA6JQEghBA6
      JQEghBA6JQEghBA6JQEghBA6JQEghBA6JQEghBA6JQGQQslkEpl3J4RYLiQAUigWixGNRtNd
      hhBCABIAQgihWxIAQgihUxIAQgihUxIAQgihUxIAQgihUxIAQgihUxIAQgihUxIAQgihUxIA
      QgihUxIAQgihUxIAQgihUxIAQgihUxIAQgihUxIAQgihUxIAQgihUxIAQgihUxIAQgihUxIA
      QgihUxIAQgihUxIAQgihUxIAQgihUxIAQgihUxIAQgihUxIAQgihUxIAQgihUxIAQgihUxIA
      QgihUxIAQgihUxIAQgihUxIAQgihUxIAQgihUxIAQgihUxIAQgihUxIAQgihUxIAQgihUxIA
      QgihUxIAQgihUxIAQgihUxIAQgihUxIAQgihUxIAQgihUxIAQgihUxIAQgihUxIAQgihU6Z0
      F/BBSiaTJJNJFEUB0P534ZyqqiiKgtFoXHTuZtcYDAYMhqX5mEgkiMfjt/1zhBBiJVg1AZBM
      JkkkEoTDYUwmEyaTCaPRqIWCqqpMT09jMBhwOp1YLBYURUFRFO2aeDyuXWOz2bBarRgMBu2a
      hT8/FAphMBjIyMjQQkCCQAix0qyaAJidnaW7u5vnn3+eBx98kJ07d1JWVoaqqng8Hn7wgx9g
      t9uJxWKYzWb27t3L5s2bAYjH4/T19bF//34ikQixWAy328369et54IEHUBSFWCzGkSNH6Ozs
      JBaLEYvFKC0tZe/evZSXl0sACCFWnFURAIlEgpGREU6cOMHWrVuxWq3auUAgwL59+9izZw+l
      paUYDAaGh4c5fPgwa9euxWKxMDw8TG9vL/n5+ezdu5dEIkFHRwfj4+NcvXqVhoYGOjo6CIfD
      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
      yAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='TemperaturePercentage' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOzdeXCb933n8feDg7jBAwTB+6ZEUtR9WYclS/KV2o4bZ+LWcZts0myaNpNk
      u9utp5O2SZpJm/Vsd6fddOvG6aRNtuvE27XcxHFsx7Eu2zIl6zQv8aZ4gwAJgrjP/UPLp6Yp
      y7ZiERKf72vGMybwEPyCoJ7P8/xOJZvNZhFCCKEpiqIoulwXIYQQIjckAIQQQqMkAIQQQqMk
      AIQQQqMkAIQQQqMkAIQQQqMkAIQQQqMkAIQQQqMkAIQQQqMkAIQQQqMkAIQQQqMkAIQQQqMk
      AIQQQqMkAIQQQqMkAIQQQqMMuS5ACLFystksmUwGRVHU/4R2yR2AEBqzsLBAPB4nnU7nuhSR
      Y3IHIG6I//bf/hs9PT3Mzs4ue27r1q0cOnSIHTt25KCylXPp0iXGx8ex2Wxs374dnS5311sj
      IyO8+eab/OIXv2B6ehqj0UhFRQWbNm3i05/+9Pt6jdHRUQYGBojH49xzzz03uGKxEiQAxA3R
      0NCAyWTC7/cTCAQ4fvw4O3fupKqqisbGRgoKCnJd4g03MTFBR0cH+fn5bNu2LWd1+Hw+jh07
      xvnz5wHYu3fvdTUB+Xw+urq6CIVCEgCrhASAuCF27tzJ+vXrmZub4/Llyxw/fpwdO3awa9cu
      7HY7TqeTdDpNJBJhYmKCWCyGoihYrVZqamrQ6/WEw2Hm5ubIZrMkEgkSiQQAdrsdm83G/Pw8
      0WgURVEoKSmhoKAAo9FIIpFgenqaTCZDMpkkkUiQTCZxOp2UlJRgsVhQFIV0Os34+DihUIhk
      MonBYKCqqgqr1YrBYCCZTDI4OEhZWRnpdJpQKEQ4HKapqYmFhQUCgQCRSIRUKoXFYiE/P5+C
      ggJMJhNjY2P09/fT09OD0+mkp6cHi8WC0+mksLCQ0dFRLBYLDocDq9UKwOXLl8nLy8Nms2G3
      2xkbG8NoNGI0GlEUhenpaUpLS7FYLCSTSbxeL8FgEL1ej9PpxOVy4XA4ln0Wly5d4syZM8zO
      znLw4EEOHTpEJpNhdnaWSCSiHhcIBAgEAoTDYfU9OZ1OnE4n0WhUfT+hUIienh4ASkpKyM/P
      R6fTEQqF8Hq9hMNhMpkMNpuNyspKTCYTiqKQyWSYmJhQX1+n02Gz2TCbzTgcDiwWC+l0mrGx
      McLhsPqZLH62eXl5JJNJpqamyMvLw2g0kkql8Pv9VFZWEolESCQSKIpCZWUl2WyWVCrFyMgI
      DodD/WzEv5EAEDdEaWkpcOWkks1m1cfWrFmjHhOJRBgYGOBv//ZvGR0dxWAw0NTUxJ/+6Z/i
      cDjo7e3llVdeUU/oU1NTAGzcuJG2tjZeffVVhoaG0Ol0fPKTn2T//v0UFhYyOzvL008/TTwe
      Z2ZmBq/Xi8/nY+fOnTzyyCM0Njai0+kIh8M89dRTnD17Fr/fT2FhIX/wB39AS0sLTqeT2dlZ
      Hn/8cT772c8SiUS4cOECHR0d/M3f/A1nzpzhxIkTdHd3EwgEaGpqYs+ePezbt4/KykoOHz7M
      qVOnGB8fR6/Xqyfv3bt3c+DAAX74wx/S1NTE5s2bWbt2LQA//vGPKSkpoa2tjY0bN/L0009T
      UlKC2+0G4H//7//NZz7zGRoaGvD7/Tz11FO0t7fjdDrZtm0bDzzwAFu2bFn2Wbz88ssEg0E2
      b97Mv/t3/0696q+trV1y3MWLFzl69CidnZ3Mzc3R0NDAbbfdxu7du+nr6+PFF19keHiYdDrN
      448/DsAjjzzC7t27sVgsDAwM8NRTT9HZ2UksFqO1tZUvf/nLVFZWYjQaSSaT/Mu//AsdHR0E
      AgEsFgstLS3U19ezZcsWGhsbicVi/PCHP+TixYvMzc3hdDrVz9btdhMMBnn66acpLy/H7XYz
      OzvLc889x1e+8hV6enqYmprCaDTy5S9/mUwmw8LCAk888QRbt27l9ttvp7Ky8kP8K7/1SQCI
      nEgkEvT19fHYY4/R3NzMQw89RCKR4OjRo/z3//7f+fSnP00wGKS/v5+RkRH2799PXV0dk5OT
      /OQnP6Gnp4e2tjZKSkoYHBzku9/9Li0tLRQUFBCPxxkaGmJ0dJQtW7bQ0tKCz+fj+eefx+12
      k8lk8Hg8/PVf/zX9/f1s3ryZsrIyOjs7+cY3vsFjjz3GbbfdRjKZpKOjg3/5l39hdnaWmZkZ
      2tra0Ol0eL1eFEXhox/9KCaTiWPHjnH8+HH8fj9f+tKX2LBhAzMzMyQSCex2O/v37yc/P5+6
      ujrS6TQDAwPY7XaamprU38nw8DDJZJLq6moymQxDQ0OMjY3h9/vxer3q3cuJEyc4c+YMIyMj
      fOUrX6G3t5fe3l6+/e1v84//+I+YzeYl/Q1DQ0NUVlaybt26a34mPp+PVCrFAw88gMlk4rXX
      XuO1115jcnKS+++/n+bmZqLRKLFYjAMHDgCoJ9S5uTkee+wx6urquPPOO3G5XDz77LM8+eST
      /Pqv/zplZWU888wzPPfcc+zdu5d9+/ah0+n48Y9/jNFoZM2aNUxOTvL973+fkydPsnnzZtxu
      N5OTk/zVX/0VyWSSvXv3YjQaGRoaYnx8nImJCRYWFnC5XFitVioqKhgaGuLIkSM88sgjGAwG
      Tpw4wcDAALfddpt6USL+jQSAyAmfz8fg4CChUIgHHniAmpoa5ufnyWQyvPzyyywsLJDNZjEa
      jWzYsIG77roLh8NBR0cHr7zyCnfccQcbNmwAoLi4mAsXLpBIJMhkMsCV4Y5r165l586drFmz
      hkgkQm9vL36/n6mpKRwOB+fOneP2229n165dVFVVsW7dOtrb2xkdHaWurg6DwUAmk2FwcJCN
      Gzfy4IMP0tjYiNlsZs+ePWzYsAGHw0E4HMbv99PV1UV/fz8Ara2tDA4OMjc3R0FBAXv37sVs
      NmOz2dT6Fu+MFmUymSWPZ7NZhoeHKSoq4u6772b37t3U1dVx+vRpZmdnOXDgADt27KCpqQmr
      1crzzz9PX1+f+vWiYDCIwWDAarVes81/+/btNDU14XQ6CYfDzM/P09nZycDAAFVVVTQ1NalN
      Zvv27QOgsLCQaDRKX18foVCI22+/nS1btqDX65mfn+fEiRP4fD4sFgvt7e3s37+fO+64g5qa
      GiKRCD//+c/R6XRks1kWFhZ488032bFjB7fffjvV1dUEg0E6OzsZHByktraW2tpastksfX19
      VFdXs3//fjZv3kxFRQUFBQUMDw+TyWQ4f/48DQ0NvPXWW9TW1uJ2u9Hr9R/SX+/qIQEgciIY
      DDI9PU0qlSIajTI1NaWe9KenpwmFQqRSKQwGA2VlZdTX11NYWEggEACgsbGR+vp6MpkM8/Pz
      JBKJZcMa3W43lZWV1NfXk0qlaGpqwufzMT09TVlZmfrz/X4/Op2OVCqlto0HAgGKi4vV19m4
      cSN33HEHLpcLQO1r6O/vZ35+nvn5eRYWFkgmk+r3FBQUYLVacTgcVFdXYzBc+ec2Pz//vn9P
      RqOR+vp6Dh48yKZNmwiFQoRCIWZnZ8lms4yMjJBOp4nH46RSKSYmJpY17SzeDbwzcK72s1Kp
      FAMDA2p/wMLCArOzs+Tn51NUVITNZiOdTlNTU6N+3/j4OGNjY6RSKWKxGDMzM6RSKbLZLD6f
      j0AggMPhYHR0lE9+8pOsXbuW0tJStRlIURSSySQLCwtMTEzwqU99iubmZioqKojH41RVVeH3
      +/H7/ep7MxqNtLS0cODAAZqbmwHUPoeSkhLOnDlDYWEh3d3d7N27l5KSEpnzcBUSACIn4vE4
      oVAIgMOHD2MwGNQT2WJn32Kn76J3G7Wy+Ni1/oEvdgwODw/j8/kIh8Nks1nOnj1LX18feXl5
      AJhMJlKp1JKfffDgQbZv366e/FOpFGfOnOH48eMMDAyok6ui0ShFRUXLfvZ7nXivpaGhga1b
      t7Jp0yYAwuEwiUSCQCDA66+/zltvvQVcCVSz2UwkElHvghbl5+eTTCYJhUJks9mr/p5SqRQX
      LlzgyJEj9Pb2qu8pFou9Z8dpMpkkGAwC8Mtf/pL29nay2SyxWIxsNqt+1slkEpfLpf6u3y4e
      j6t3P+Xl5eodjKIoVFVVMTU1RSwWU49vbW1l+/bt6skfQK/XU1JSQktLC2fOnGH9+vUMDw/z
      2c9+Vu1HEUtJAIicMJlM2O12dDodv/Ebv0FBQcGSduv6+nrOnj37of28bDaL3+/HbDZTUFCA
      3W4HroxWWrduHSUlJeqxxcXFajMIgNPpxGKxqM+fPn2aF154gUwmw5//+Z/T1tbGxYsXee65
      57h48eKyn/urTLiy2+1LfrbdbicvL4/CwkIOHDjAxo0b1d+bTqejqqpKfW+LGhoa6Ovro6Oj
      g3vvvfeqAXD27FlefPFF5ubm+MY3vkFbWxtdXV288MILHDt2DEAdyfPO92M0GnE6neh0Oj7y
      kY/Q1NS0pLmlvLyciYkJqqqq6OjooLKycllQms1m9XvGx8epqqqisLCQbDbL2NgYFosFs9ms
      Hu90Oq8aJNXV1ezbt4//83/+D8ePHyc/P5+WlhY1vMVSEgAiJ1wuF1VVVaTTaXp6eti2bRuV
      lZVkMhlee+01ysvLf+WJU8FgUB2aODExwYkTJ2hra6OyshKHw0FVVRXDw8OUl5dTW1tLcXEx
      nZ2dGAyGa7YXLy6lsBgmfr+fixcvMjIysuS4wsJCrFYrnZ2dTE5OYrPZ1JO52WxmYmKCsbEx
      PB4P4+PjzMzMvOeVqtlsxu12q6+7ZcsW3G430WiUyclJ/H4/DocDo9Gofs+hQ4eYnp7m3Llz
      fPe73+Wee+4hk8mod0IHDx5U35PJZKKgoIDZ2Vk6OjoYHBxUX8fj8aijfU6fPk19fT02mw2r
      1UpjYyPpdJrBwUE8Ho86sun06dPY7Xby8/PZsGEDL774IoFAgNLSUsLhMIODgzQ2NmIwGLDb
      7dTV1fHaa6+Rn59PLBZjamqKvr4+7rzzTjwez3t+5na7nerqaqqrqxkYGGD79u1LgkMsJQEg
      Vszbrzztdju1tbXs3LmTrq4u5ufnKSwsBK6MKLntttt+5TbbkZERXnzxRQoKCggEAphMJtra
      2qirq8Nut3PXXXdx5swZzp07x+TkJE6nk7m5ObZu3UphYeG7hkBZWRnFxcWMjIyozVeTk5Nq
      k9ai0tJSqqqqOH/+PE8//TRut5vW1lZaWlpYu3YtFy9e5Pjx4wwNDZFKpYhEIu/aRLNIr9fT
      3NyM1+ulo6ODF198EafTqY55v+uuu5Z9T2NjIzt27ODMmTOcOXOG+fl5tbnF5XJx8OBBPB4P
      brcbr9fLs88+i8FgYHp6moWFBfV13G435eXl9PT08K//+q+UlJSwb98+6uvrqaioYOfOnUxO
      TnLs2DEuXboEXAnhxcl/d9xxB6FQiLm5OWKxGHq9Hr1erzbtFRYWcuedd3LixAleeeUVnE4n
      wWCQoqIiWltb39cQToPBgMPhYOPGjXR1dbFlyxZ1HoJYTgJA3FB6vR6r1UpDQ8OSpgmLxUJl
      ZSX3338/zzzzDF1dXWqnb1tbG4qiYLPZKCsrw+VyqSfjxatNm82GXq9XJxM1NDQsu9KbnZ0l
      GAxiNBrR6/Xs2LGDrVu3UlVVRTab5SMf+QgzMzMMDw+rV+9lZWVs3rxZPWk0NDTgdDrVDlyA
      qqoq9SR89OhR7HY7NTU1VFRULPn5paWltLS00NHRwcmTJ6moqMBut7NhwwZ27NjByMgIo6Oj
      TE5OUlVVRVVVFR6PB5vNhqIolJeXU1JSoo4cWtTS0kI6nWZmZobz58+TzWbVYZBWq3XZnZPL
      5eL222/HZrPx8ssv8+abb6r1Ld5xVFZWsnbtWsbGxjhy5Ah2u52qqirKy8vVWdsFBQU0Nzcz
      NjZGZ2cnPT09NDQ00NjYiMvl4v777+fll19mcHCQS5cuodfr1TsBp9PJ9u3byWazXLp0iUQi
      gdlsxmKxYLVaMRqNFBQUcO+999Lf38/ly5eJRqMYjUZ27drFhg0b8Hg8zM7OUl5eTnFx8ZKm
      sbczGAysXbuW6elp1q9ff9WmInGFkv1VeqiE+BBkMhlCoRDpdBqr1forz9YcGRnh8ccfp7a2
      ljvuuIPm5mY1iK4mEokQj8fR6XQ4nc73fbUYjUaZm5vD4/Gg0+mu+X1erxez2YzZbFZPSNFo
      VL3qXxxx9EHNzc2hKAp5eXnv+v7ebnG4JUBeXt6y0IzFYszOzlJSUqJenb9TKpUiHA6TTqex
      2WxLPq/FzvBYLKb2VyiKQjQaxev1UlpaitFoJBKJMDg4yOc+9zm++tWvsnPnTnWcfiaTwe/3
      E4/HsVqtV+1Yv5bFCX5jY2N8/etf/0DfqyWKoihyByByTlEU7HY72Wz2Q18w7e1j7691zPU0
      E5hMJkpKSt5XzS6Xa9koJpPJ9CtfnX6QwFq0eCd2te9bfE/X6gPR6/U4HI6rfl6Koqgdtm9/
      bmRkhL//+79nZGSEoqIikskkc3NztLa2sm7duiV9H4qiUFRU9J7NYe8UDAY5c+YMP/vZzzh3
      7hxf+cpX3vf3apUEgMi5D3tdepvNxrZt29Sx+O91gr7e0NHpdO/7e692Qv0wwu6DTm56r9+1
      oihLmrs+6Gu823Mul4u7776bjo4OtbPZ4XBQU1ODx+NZ8j4URbmuSVuLa0lVVVXR0tLC+vXr
      P/BraI00AYlVJxqNMjQ0pI6YudoCaWJlpdNpdXG9aDSKzWbD4/GoHf8fhng8zvT0NJOTk+qM
      5vcKMy1TFEWRABBCCA1SFEWRHcGEEEKjJACuw+KSBUIIcSuTALgOv+r0fiGEuBlIAAghhEZJ
      AAghhEZJAAghhEZJAAghhEZJAAghhEZJAAghhEZJAAghhEZJAAghhEZJAAghhEZJAAghhEZJ
      AAghhEZJAAghhEZJAAghhEZJAAghhEZJAAghhEZJAAghhEZJAAghhEZJAAghhEZJAAghhEZJ
      AAghhEZJAAghhEZJAAghhEZJAAghhEZJAAghhEZJAAghhEZJAAghhEZJAAghhEZJAAghhEZJ
      AAghhEZJAAghhEZJAAghhEZJAAghhEZJAAghhEZJAAghhEZJAAghhEZJAAghhEZJAAghhEYZ
      cl3AhymbzZLNZllYWECn02E0GjGZTCiKsuzYZDJJPB5HURQsFgs6nWShEEJbVk0A+Hw+pqam
      mJ6eVk/4iqJgNBrZvHkzZrOZZDJJIBBgYGCAeDxOOp0GQKfTsW3bNqxWK0ajMZdvQwghVsyq
      CYBAIMDQ0BDDw8MUFBSQzWaJxWLE43E8Hg+VlZWEw2FGR0fp6Oggm82i1+tJpVIsLCzgdrup
      q6uTABBCaIaSzWazuS7iw+Dz+YhGo5SVlaHX61EUBa/XS09PD/39/dx3330Eg0GGh4dZs2YN
      FRUVGAwG5ubm6O3t5dSpU3z0ox+lpqbmPX9WKpUikUhgtVpX4J0JIcSHT1EUZdXcARQWFlJY
      WLikLT+TyZBKpbBYLOj1eurq6qiqqsJgMKDX6wEwGAw4HI5clS2EEDmzagJAr9eTTqcJh8OE
      w2H8fj9jY2OMjY2xc+dOrFYrBoMBg+Hf3nI4HGZsbIxTp07R0tKCzWbL4TsQQoiVtWoCACAe
      jzM6Osrk5CQTExMsLCxgNBqpq6vDZDItOTYQCDA2Nsbw8DDhcJjm5mbsdvuSY9LpNFdrIctk
      MsCVpiAhhLhVraoACIVCnDt3jkuXLhEKhSgtLeW2227DbDarI4MWT+gDAwO0t7eTTCY5cOAA
      lZWVy14vkUhcNQAWXycajd64NyOEEDfYqukEfqdIJEJfXx/t7e243W727duHy+UiHA5z4cIF
      jhw5wm233caWLVsoLCz8QK8tncBCiFudoijKqp39ZDKZqK6uZteuXfT29hKLxVhYWGBkZIQ3
      33yTQ4cOsW7dumXNPkIIoRWrogkok8kQDodJpVIUFBQAVzqFjUYjeXl5RKNRMpkMgUCAyclJ
      7HY7TU1N5OfnL+kUFkIILVkVZ79sNovP5yMQCFBTU4PBYCCbzeL3+xkZGcHlcmEwGJiZmcHr
      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
      +wAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='TopHolidays' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Trends' width='384'>
      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
      C11dXWzatIkPP/zwvO9HiIuiXsC6devUWbNmqfPmzdP+mz17tvrUU0+pqqqq//Ef/6F+5Stf
      Ud1ut6qqqvrhhx+q8+fPVx0Oh1pbW6tmZmaq5eXlqqqq6k9/+lP1xz/+saqqqvrmm2+qX/jC
      F9T29nZVVVV1165d6oIFC7R2e3p6tH9/9NFH6tKlS1VVVdXdu3ers2bNUmtra1VFUdQ77rhD
      feeddwbUfb7Xz5s3T+3u7lZVVVU/++wzrd0L1eTT1tamZmZmqvv371ezsrLU++67T/V6veqS
      JUvUkpIS9b333lNXrVqlqqqqdnZ2qnPmzFGzs7NVVVXVhoYGNTMzUz158uR561RVVV20aJG6
      Y8cO7W+73a5mZmaqBw8e7DevEydOqJ9//rm6cOFC1W63q6qqqv/85z/V2267TVUURVtmd999
      t1pQUDDg/axdu1b9+c9/PuBxVVXVBx54QH355Ze1v1988UX18ccfV1VVVV955RX1iSeeUL1e
      r6qqqvq///f/Vr/zne9ccFme+7l4++231fvuu69fu5988om6fPlyVVVVdc+ePercuXPV2tpa
      VVVVtby8XJ01a5Z68OBBbZn4lm9TU5OamZk54H1WVFSomZmZ6rZt29TCwkL13XffVefMmaO+
      9957F1wPzz//vPrLX/6y3/wGq/nBBx9UX3vtNVVVVdXr9aqrV69W33nnHa3GxYsXq5s3b9aW
      1/33369Nr6qqunr1avUvf/mL2tnZqWZmZvZb977PqxCX07CGgKZNm8ZTTz2l/f33v/9d26Uv
      Ly9n1qxZ2hb4vHnzcLlc1NfXExoaOuQ8T58+TWZmJjExMQOeUxSFDRs28Nlnn9HS0oLb7da2
      SBcvXkxCQgKbNm1i4cKFtLa2snLlymG/Hs5s3fpqM5vNw6rpbLGxsYwbN46CggLcbjfTp09H
      r9dz0003cfz4cQoLC5k+fToANTU1eL1ePvnkE7Zu3QqA0WikpqaGyZMnn7fOofhqN5lM2mOV
      lZUYDAZ+9atfAdDZ2UlXV5d2HEKn0/Hqq68ybty4AfOzWq3alvC5ysvLefTRR7W/582bx69/
      /et+r9Xrz+xIXsyyHI7y8nLS0tJISUkBID09naSkJCoqKpg6dSoAYWFhA2oYzLp16wBISEjg
      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
      SlkAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
